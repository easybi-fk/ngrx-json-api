{"version":3,"file":"ngrx-json-api.umd.js","sources":["../../src/module.ts","../../src/reducers.ts","../../src/effects.ts","../../src/api.ts","../../src/pipes.ts","../../src/services.ts","../../src/actions.ts","../../src/selectors.ts","../../src/utils.ts","../../src/interfaces.ts"],"sourcesContent":["import { InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { HttpClient } from '@angular/common/http';\n\nimport { Store, StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { NgrxJsonApi } from './api';\nimport { NgrxJsonApiEffects } from './effects';\nimport { NgrxJsonApiService } from './services';\nimport { reducer } from './reducers';\nimport {\n  DenormaliseStoreResourcePipe,\n  GetDenormalisedValuePipe,\n  SelectStoreResourcePipe,\n  SelectStoreResourcesPipe,\n} from './pipes';\n\nimport { NgrxJsonApiConfig } from './interfaces';\nimport { NgrxJsonApiSelectors } from './selectors';\n\nexport const NGRX_JSON_API_CONFIG = new InjectionToken<NgrxJsonApiConfig>(\n  'NGRX_JSON_API_CONFIG'\n);\n\nexport function apiFactory(http: HttpClient, config: NgrxJsonApiConfig) {\n  return new NgrxJsonApi(http, config);\n}\n\n/**\n * Deprecated, do not use any longer\n */\nexport function selectorsFactory() {\n  return new NgrxJsonApiSelectors();\n}\n\nexport function serviceFactory(store: Store<any>, config: NgrxJsonApiConfig) {\n  return new NgrxJsonApiService(store, config);\n}\n\nexport function configure(config: NgrxJsonApiConfig): Array<any> {\n  return [\n    {\n      provide: NgrxJsonApi,\n      useFactory: apiFactory,\n      deps: [HttpClient, NGRX_JSON_API_CONFIG],\n    },\n    {\n      provide: NgrxJsonApiSelectors,\n      useFactory: selectorsFactory,\n    },\n    {\n      provide: NgrxJsonApiService,\n      useFactory: serviceFactory,\n      deps: [Store, NGRX_JSON_API_CONFIG],\n    },\n    {\n      provide: NGRX_JSON_API_CONFIG,\n      useValue: config,\n    },\n  ];\n}\n\n@NgModule({\n  declarations: [\n    DenormaliseStoreResourcePipe,\n    GetDenormalisedValuePipe,\n    SelectStoreResourcePipe,\n    SelectStoreResourcesPipe,\n  ],\n  imports: [\n    EffectsModule.forFeature([NgrxJsonApiEffects]),\n    StoreModule.forFeature('NgrxJsonApi', reducer, {}),\n  ],\n  exports: [\n    DenormaliseStoreResourcePipe,\n    GetDenormalisedValuePipe,\n    SelectStoreResourcePipe,\n    SelectStoreResourcesPipe,\n  ],\n})\nexport class NgrxJsonApiModule {\n  static configure(config: NgrxJsonApiConfig): ModuleWithProviders {\n    return {\n      ngModule: NgrxJsonApiModule,\n      providers: configure(config),\n    };\n  }\n}\n","import { Action } from '@ngrx/store';\n\nimport {\n  ApiApplyInitAction,\n  ApiRollbackAction,\n  NgrxJsonApiActionTypes,\n} from './actions';\nimport {\n  ModifyStoreResourceErrorsPayload,\n  NgrxJsonApiState,\n  NgrxJsonApiZone,\n  Query,\n  ResourceIdentifier,\n  StoreResource,\n} from './interfaces';\nimport {\n  clearQueryResult,\n  compactStore,\n  deleteStoreResources,\n  getPendingChanges,\n  removeQuery,\n  removeStoreResource,\n  rollbackStoreResources,\n  setIn,\n  updateQueriesForDeletedResource,\n  updateQueryErrors,\n  updateQueryParams,\n  updateQueryResults,\n  updateResourceErrors,\n  updateResourceErrorsForQuery,\n  updateResourceState,\n  updateStoreDataFromPayload,\n  updateStoreDataFromResource,\n} from './utils';\n\nexport const initialNgrxJsonApiZone: NgrxJsonApiZone = {\n  isCreating: 0,\n  isReading: 0,\n  isUpdating: 0,\n  isDeleting: 0,\n  isApplying: 0,\n  data: {},\n  queries: {},\n};\n\nexport const initialNgrxJsonApiState: NgrxJsonApiState = {\n  zones: {},\n};\n\nexport function NgrxJsonApiStoreReducer(\n  state: NgrxJsonApiState = initialNgrxJsonApiState,\n  action: any\n): NgrxJsonApiState {\n  const zoneId = action['zoneId'];\n  if (!zoneId) {\n    return state;\n  }\n  let zone = state.zones[zoneId];\n  if (!zone) {\n    zone = initialNgrxJsonApiZone;\n  }\n  let newZone = NgrxJsonApiZoneReducer(zone, action);\n  if (zone != newZone) {\n    return {\n      ...state,\n      zones: {\n        ...state.zones,\n        [zoneId]: newZone,\n      },\n    };\n  } else {\n    return state;\n  }\n}\n\nexport function NgrxJsonApiZoneReducer(\n  zone: NgrxJsonApiZone,\n  action: any\n): NgrxJsonApiZone {\n  let newZone;\n  switch (action.type) {\n    case NgrxJsonApiActionTypes.API_POST_INIT: {\n      let updatedData = updateStoreDataFromResource(\n        zone.data,\n        action.payload,\n        false,\n        true\n      );\n      newZone = {\n        ...zone,\n        data: updatedData,\n        isCreating: zone.isCreating + 1,\n      };\n      return newZone;\n    }\n    case NgrxJsonApiActionTypes.API_GET_INIT: {\n      let query = action.payload as Query;\n      newZone = {\n        ...zone,\n        queries: updateQueryParams(zone.queries, query),\n        isReading: zone.isReading + 1,\n      };\n      return newZone;\n    }\n    case NgrxJsonApiActionTypes.API_PATCH_INIT: {\n      let updatedData = updateStoreDataFromResource(\n        zone.data,\n        action.payload,\n        false,\n        false\n      );\n      newZone = {\n        ...zone,\n        data: updatedData,\n        isUpdating: zone.isUpdating + 1,\n      };\n      return newZone;\n    }\n    case NgrxJsonApiActionTypes.API_DELETE_INIT: {\n      newZone = {\n        ...zone,\n        data: updateResourceState(zone.data, action.payload, 'DELETED'),\n        isDeleting: zone.isDeleting + 1,\n      };\n      return newZone;\n    }\n    case NgrxJsonApiActionTypes.API_POST_SUCCESS: {\n      newZone = {\n        ...zone,\n        data: updateStoreDataFromPayload(zone.data, action.payload.jsonApiData),\n        isCreating: zone.isCreating - 1,\n      };\n      return newZone;\n    }\n    case NgrxJsonApiActionTypes.API_GET_SUCCESS: {\n      newZone = {\n        ...zone,\n        data: updateStoreDataFromPayload(zone.data, action.payload.jsonApiData),\n        queries: updateQueryResults(\n          zone.queries,\n          action.payload.query.queryId,\n          action.payload.jsonApiData\n        ),\n        isReading: zone.isReading - 1,\n      };\n      return newZone;\n    }\n    case NgrxJsonApiActionTypes.API_PATCH_SUCCESS: {\n      newZone = {\n        ...zone,\n        data: updateStoreDataFromPayload(zone.data, action.payload.jsonApiData),\n        isUpdating: zone.isUpdating - 1,\n      };\n      return newZone;\n    }\n    case NgrxJsonApiActionTypes.API_DELETE_SUCCESS: {\n      newZone = {\n        ...zone,\n        data: deleteStoreResources(zone.data, action.payload.query),\n        queries: updateQueriesForDeletedResource(zone.queries, {\n          id: action.payload.query.id,\n          type: action.payload.query.type,\n        }),\n        isDeleting: zone.isDeleting - 1,\n      };\n      return newZone;\n    }\n    case NgrxJsonApiActionTypes.API_QUERY_REFRESH: {\n      // clear result ids and wait until new data is fetched (triggered by effect)\n      newZone = {\n        ...zone,\n        queries: clearQueryResult(zone.queries, action.payload),\n      };\n      return newZone;\n    }\n    case NgrxJsonApiActionTypes.API_POST_FAIL: {\n      newZone = {\n        ...zone,\n        data: updateResourceErrorsForQuery(\n          zone.data,\n          action.payload.query,\n          action.payload.jsonApiData\n        ),\n        isCreating: zone.isCreating - 1,\n      };\n      return newZone;\n    }\n    case NgrxJsonApiActionTypes.API_GET_FAIL: {\n      newZone = {\n        ...zone,\n        queries: updateQueryErrors(\n          zone.queries,\n          action.payload.query.queryId,\n          action.payload.jsonApiData\n        ),\n        isReading: zone.isReading - 1,\n      };\n      return newZone;\n    }\n    case NgrxJsonApiActionTypes.API_PATCH_FAIL: {\n      newZone = {\n        ...zone,\n        data: updateResourceErrorsForQuery(\n          zone.data,\n          action.payload.query,\n          action.payload.jsonApiData\n        ),\n        isUpdating: zone.isUpdating - 1,\n      };\n      return newZone;\n    }\n    case NgrxJsonApiActionTypes.API_DELETE_FAIL: {\n      newZone = {\n        ...zone,\n        data: updateResourceErrorsForQuery(\n          zone.data,\n          action.payload.query,\n          action.payload.jsonApiData\n        ),\n        isDeleting: zone.isDeleting - 1,\n      };\n      return newZone;\n    }\n    case NgrxJsonApiActionTypes.REMOVE_QUERY: {\n      let queryId = action.payload as string;\n      newZone = { ...zone, queries: removeQuery(zone.queries, queryId) };\n      return newZone;\n    }\n    case NgrxJsonApiActionTypes.LOCAL_QUERY_INIT: {\n      let query = action.payload as Query;\n      newZone = { ...zone, queries: updateQueryParams(zone.queries, query) };\n      return newZone;\n    }\n    case NgrxJsonApiActionTypes.MODIFY_STORE_RESOURCE_ERRORS: {\n      let payload = action.payload as ModifyStoreResourceErrorsPayload;\n      newZone = {\n        ...zone,\n        data: updateResourceErrors(\n          zone.data,\n          payload.resourceId,\n          payload.errors,\n          payload.modificationType\n        ),\n      };\n      return newZone;\n    }\n    case NgrxJsonApiActionTypes.LOCAL_QUERY_SUCCESS: {\n      return setIn(\n        zone,\n        'queries',\n        updateQueryResults(\n          zone.queries,\n          action.payload.query.queryId,\n          action.payload.jsonApiData\n        )\n      );\n    }\n    case NgrxJsonApiActionTypes.PATCH_STORE_RESOURCE: {\n      let updatedData = updateStoreDataFromResource(\n        zone.data,\n        action.payload,\n        false,\n        false\n      );\n      if (updatedData !== zone.data) {\n        newZone = { ...zone, data: updatedData };\n        return newZone;\n      } else {\n        return zone;\n      }\n    }\n    case NgrxJsonApiActionTypes.POST_STORE_RESOURCE: {\n      let updatedData = updateStoreDataFromResource(\n        zone.data,\n        action.payload,\n        false,\n        true\n      );\n      if (updatedData !== zone.data) {\n        newZone = { ...zone, data: updatedData };\n        return newZone;\n      } else {\n        return zone;\n      }\n    }\n    case NgrxJsonApiActionTypes.NEW_STORE_RESOURCE: {\n      let updatedData = updateStoreDataFromResource(\n        zone.data,\n        action.payload,\n        false,\n        true\n      );\n      updatedData = updateResourceState(updatedData, action.payload, 'NEW');\n      if (updatedData !== zone.data) {\n        newZone = { ...zone, data: updatedData };\n        return newZone;\n      } else {\n        return zone;\n      }\n    }\n    case NgrxJsonApiActionTypes.DELETE_STORE_RESOURCE: {\n      let resourceId = action.payload as ResourceIdentifier;\n      if (\n        zone.data[resourceId.type] &&\n        zone.data[resourceId.type][resourceId.id]\n      ) {\n        let resource = zone.data[resourceId.type][resourceId.id];\n\n        if (resource.state === 'NEW' || resource.state === 'CREATED') {\n          // not yet stored on server-side, just delete\n          newZone = {\n            ...zone,\n            data: removeStoreResource(zone.data, resourceId),\n          };\n          return newZone;\n        } else {\n          // stored on server, mark for deletion\n          newZone = {\n            ...zone,\n            data: updateResourceState(zone.data, action.payload, 'DELETED'),\n          };\n          return newZone;\n        }\n      }\n      return zone;\n    }\n    case NgrxJsonApiActionTypes.API_APPLY_INIT: {\n      let payload = (action as ApiApplyInitAction).payload;\n      let pending: Array<StoreResource> = getPendingChanges(\n        zone.data,\n        payload.ids,\n        payload.include\n      );\n      newZone = { ...zone, isApplying: zone.isApplying + 1 };\n      for (let pendingChange of pending) {\n        if (pendingChange.state === 'CREATED') {\n          newZone.isCreating++;\n        } else if (pendingChange.state === 'UPDATED') {\n          newZone.isUpdating++;\n        } else if (pendingChange.state === 'DELETED') {\n          newZone.isDeleting++;\n        } else {\n          throw new Error('unknown state ' + pendingChange.state);\n        }\n      }\n      return newZone;\n    }\n    case NgrxJsonApiActionTypes.API_APPLY_SUCCESS:\n    case NgrxJsonApiActionTypes.API_APPLY_FAIL: {\n      // apply all the committed or failed changes\n      let actions = action.payload as Array<Action>;\n      newZone = zone;\n      for (let commitAction of actions) {\n        newZone = NgrxJsonApiZoneReducer(newZone, commitAction);\n      }\n      newZone = { ...newZone, isApplying: zone['isApplying'] - 1 };\n      return newZone;\n    }\n    case NgrxJsonApiActionTypes.API_ROLLBACK: {\n      let payload = (action as ApiRollbackAction).payload;\n      newZone = {\n        ...zone,\n        data: rollbackStoreResources(zone.data, payload.ids, payload.include),\n      };\n      return newZone;\n    }\n    case NgrxJsonApiActionTypes.CLEAR_STORE: {\n      return initialNgrxJsonApiZone;\n    }\n    case NgrxJsonApiActionTypes.COMPACT_STORE: {\n      return compactStore(zone);\n    }\n    default:\n      return zone;\n  }\n}\n\nexport const reducer = NgrxJsonApiStoreReducer;\n","import { Injectable, OnDestroy } from '@angular/core';\n\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\n\nimport * as _ from 'lodash';\n\nimport { Action, Store } from '@ngrx/store';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\n\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\n\nimport 'rxjs/add/operator/concatAll';\nimport {\n  catchError,\n  concatAll,\n  combineLatest,\n  debounceTime,\n  filter,\n  flatMap,\n  map,\n  mapTo,\n  mergeMap,\n  skip,\n  switchMap,\n  switchMapTo,\n  tap,\n  take,\n  toArray,\n  withLatestFrom,\n  takeWhile,\n  takeUntil,\n} from 'rxjs/operators';\nimport {\n  ApiApplyFailAction,\n  ApiApplyInitAction,\n  ApiApplySuccessAction,\n  ApiDeleteFailAction,\n  ApiDeleteInitAction,\n  ApiDeleteSuccessAction,\n  ApiGetFailAction,\n  ApiGetInitAction,\n  ApiGetSuccessAction,\n  ApiPatchFailAction,\n  ApiPatchInitAction,\n  ApiPatchSuccessAction,\n  ApiPostFailAction,\n  ApiPostInitAction,\n  ApiPostSuccessAction,\n  ApiQueryRefreshAction,\n  LocalQueryFailAction,\n  LocalQueryInitAction,\n  LocalQuerySuccessAction,\n  NgrxJsonApiActionTypes,\n} from './actions';\nimport { NgrxJsonApi } from './api';\nimport {\n  getNgrxJsonApiZone,\n  selectNgrxJsonApiZone,\n  selectStoreResource,\n  selectStoreResourcesOfType,\n} from './selectors';\nimport {\n  NgrxJsonApiConfig,\n  NgrxJsonApiStore,\n  NgrxJsonApiStoreData,\n  NgrxJsonApiStoreResources,\n  OperationType,\n  Payload,\n  Query,\n  Resource,\n  ResourceError,\n  StoreResource,\n} from './interfaces';\nimport {\n  generatePayload,\n  getPendingChanges,\n  sortPendingChanges,\n  filterResources,\n} from './utils';\n\n@Injectable()\nexport class NgrxJsonApiEffects implements OnDestroy {\n  @Effect()\n  createResource$: Observable<Action> = this.actions$.pipe(\n    ofType<ApiPostInitAction>(NgrxJsonApiActionTypes.API_POST_INIT),\n    mergeMap((action: ApiPostInitAction) => {\n      const payload = this.generatePayload(action.payload, 'POST');\n      return this.jsonApi.create(payload.query, payload.jsonApiData).pipe(\n        map(\n          (response: HttpResponse<any>) =>\n            new ApiPostSuccessAction(\n              {\n                jsonApiData: response.body,\n                query: payload.query,\n              },\n              action.zoneId\n            )\n        ),\n        catchError(error =>\n          of(\n            new ApiPostFailAction(\n              this.toErrorPayload(payload.query, error),\n              action.zoneId\n            )\n          )\n        )\n      );\n    })\n  );\n\n  @Effect()\n  updateResource$: Observable<Action> = this.actions$.pipe(\n    ofType<ApiPatchInitAction>(NgrxJsonApiActionTypes.API_PATCH_INIT),\n    mergeMap((action: ApiPatchInitAction) => {\n      const payload = this.generatePayload(action.payload, 'PATCH');\n      return this.jsonApi.update(payload.query, payload.jsonApiData).pipe(\n        map(\n          (response: HttpResponse<any>) =>\n            new ApiPatchSuccessAction(\n              {\n                jsonApiData: response.body,\n                query: payload.query,\n              },\n              action.zoneId\n            )\n        ),\n        catchError(error =>\n          of(\n            new ApiPatchFailAction(\n              this.toErrorPayload(payload.query, error),\n              action.zoneId\n            )\n          )\n        )\n      );\n    })\n  );\n\n  @Effect()\n  readResource$: Observable<Action> = this.actions$.pipe(\n    ofType<ApiGetInitAction>(NgrxJsonApiActionTypes.API_GET_INIT),\n    mergeMap((action: ApiGetInitAction) => {\n      const query = action.payload;\n      return this.jsonApi.find(query).pipe(\n        map((response: HttpResponse<any>) => response.body),\n        map(\n          data =>\n            new ApiGetSuccessAction(\n              {\n                jsonApiData: data,\n                query: query,\n              },\n              action.zoneId\n            )\n        ),\n        catchError(error =>\n          of(\n            new ApiGetFailAction(\n              this.toErrorPayload(query, error),\n              action.zoneId\n            )\n          )\n        )\n      );\n    })\n  );\n\n  private localQueryInitEventFor(query: Query) {\n    return this.actions$.pipe(\n      ofType<LocalQueryInitAction>(NgrxJsonApiActionTypes.LOCAL_QUERY_INIT),\n      map(action => action as LocalQueryInitAction),\n      filter(action => query.queryId == action.payload.queryId)\n    );\n  }\n\n  private removeQueryEventFor(query: Query) {\n    return this.actions$.pipe(\n      ofType<LocalQueryInitAction>(NgrxJsonApiActionTypes.REMOVE_QUERY),\n      map(action => action as LocalQueryInitAction),\n      filter(action => query.queryId == action.payload)\n    );\n  }\n\n  @Effect()\n  queryStore$ = this.actions$.pipe(\n    ofType<LocalQueryInitAction>(NgrxJsonApiActionTypes.LOCAL_QUERY_INIT),\n    mergeMap((action: LocalQueryInitAction) => {\n      const query = action.payload;\n      return this.store\n        .let(selectNgrxJsonApiZone(action.zoneId))\n        .let(this.executeLocalQuery(query))\n        .pipe(\n          map(\n            results =>\n              new LocalQuerySuccessAction(\n                {\n                  jsonApiData: { data: results },\n                  query: query,\n                },\n                action.zoneId\n              )\n          ),\n          catchError(error =>\n            of(\n              new LocalQueryFailAction(\n                this.toErrorPayload(query, error),\n                action.zoneId\n              )\n            )\n          ),\n          takeUntil(this.localQueryInitEventFor(query)),\n          takeUntil(this.removeQueryEventFor(query))\n        );\n    })\n  );\n\n  private executeLocalQuery(query: Query) {\n    return (state$: Observable<NgrxJsonApiStore>) => {\n      let selected$: Observable<any>;\n      if (!query.type) {\n        return state$.map(() => Observable.throw('Unknown query'));\n      } else if (query.type && query.id) {\n        selected$ = state$.let(\n          selectStoreResource({ type: query.type, id: query.id })\n        );\n      } else {\n        selected$ = state$\n          .let(selectStoreResourcesOfType(query.type))\n          .pipe(\n            combineLatest(\n              state$.map(it => it.data),\n              (\n                resources: NgrxJsonApiStoreResources,\n                storeData: NgrxJsonApiStoreData\n              ) =>\n                filterResources(\n                  resources,\n                  storeData,\n                  query,\n                  this.config.resourceDefinitions,\n                  this.config.filteringConfig\n                )\n            )\n          );\n      }\n      return selected$.distinctUntilChanged();\n    };\n  }\n\n  @Effect()\n  deleteResource$ = this.actions$.pipe(\n    ofType<ApiDeleteInitAction>(NgrxJsonApiActionTypes.API_DELETE_INIT),\n    mergeMap((action: ApiDeleteInitAction) => {\n      const payload = this.generatePayload(action.payload, 'DELETE');\n      return this.jsonApi.delete(payload.query).pipe(\n        map((response: HttpResponse<any>) => response.body),\n        map(\n          data =>\n            new ApiDeleteSuccessAction(\n              {\n                jsonApiData: data,\n                query: payload.query,\n              },\n              action.zoneId\n            )\n        ),\n        catchError(error =>\n          of(\n            new ApiDeleteFailAction(\n              this.toErrorPayload(payload.query, error),\n              action.zoneId\n            )\n          )\n        )\n      );\n    })\n  );\n\n  @Effect()\n  triggerReadOnQueryRefresh$ = this.actions$.pipe(\n    ofType(NgrxJsonApiActionTypes.API_QUERY_REFRESH),\n    withLatestFrom(this.store, (action: ApiQueryRefreshAction, store) => {\n      let queryId = action.payload;\n      let state = getNgrxJsonApiZone(store, action.zoneId);\n      let query = state.queries[queryId].query;\n      return new ApiGetInitAction(query, action.zoneId);\n    })\n  );\n\n  @Effect()\n  refreshQueriesOnDelete$: Observable<Action> = this.actions$.pipe(\n    ofType(NgrxJsonApiActionTypes.API_DELETE_SUCCESS),\n    withLatestFrom(this.store, (action: ApiDeleteSuccessAction, store) => {\n      let id = { id: action.payload.query.id, type: action.payload.query.type };\n      if (!id.id || !id.type) {\n        throw new Error(\n          'API_DELETE_SUCCESS did not carry resource id and type information'\n        );\n      }\n\n      let state = getNgrxJsonApiZone(store, action.zoneId);\n      let actions = [];\n      for (let queryId in state.queries) {\n        if (state.queries.hasOwnProperty(queryId)) {\n          let query = state.queries[queryId];\n          if (query.resultIds) {\n            let needsRefresh =\n              _.findIndex(query.resultIds, function(o) {\n                return _.isEqual(id, o);\n              }) !== -1;\n\n            let sameIdRequested =\n              query.query.id === id.id && query.query.type === id.type;\n            if (sameIdRequested && (needsRefresh || _.isEmpty(query.errors))) {\n              throw new Error(\n                'store is in invalid state, queries for deleted' +\n                  ' resource should have been emptied and marked with 404 error'\n              );\n            }\n\n            if (needsRefresh) {\n              actions.push(new ApiQueryRefreshAction(queryId, action.zoneId));\n            }\n          }\n        }\n      }\n      return actions;\n    }),\n    flatMap(actions => of(...actions))\n  );\n\n  private handlePendingCreate(pendingChange: StoreResource, zoneId: string) {\n    let payload: Payload = this.generatePayload(pendingChange, 'POST');\n    return this.jsonApi.create(payload.query, payload.jsonApiData).pipe(\n      map(\n        response =>\n          new ApiPostSuccessAction(\n            {\n              jsonApiData: response.body,\n              query: payload.query,\n            },\n            zoneId\n          )\n      ),\n      catchError(error =>\n        of(\n          new ApiPostFailAction(\n            this.toErrorPayload(payload.query, error),\n            zoneId\n          )\n        )\n      )\n    );\n  }\n\n  private handlePendingUpdate(pendingChange: StoreResource, zoneId: string) {\n    let payload: Payload = this.generatePayload(pendingChange, 'PATCH');\n    return this.jsonApi.update(payload.query, payload.jsonApiData).pipe(\n      map(\n        response =>\n          new ApiPatchSuccessAction(\n            {\n              jsonApiData: response.body,\n              query: payload.query,\n            },\n            zoneId\n          )\n      ),\n      catchError(error =>\n        of(\n          new ApiPatchFailAction(\n            this.toErrorPayload(payload.query, error),\n            zoneId\n          )\n        )\n      )\n    );\n  }\n\n  private handlePendingDelete(pendingChange: StoreResource, zoneId: string) {\n    let payload: Payload = this.generatePayload(pendingChange, 'DELETE');\n    return this.jsonApi.delete(payload.query).pipe(\n      map(\n        response =>\n          new ApiDeleteSuccessAction(\n            {\n              jsonApiData: response.body,\n              query: payload.query,\n            },\n            zoneId\n          )\n      ),\n      catchError(error =>\n        of(\n          new ApiDeleteFailAction(\n            this.toErrorPayload(payload.query, error),\n            zoneId\n          )\n        )\n      )\n    );\n  }\n\n  @Effect()\n  applyResources$: Observable<Action> = this.actions$.pipe(\n    ofType(NgrxJsonApiActionTypes.API_APPLY_INIT),\n    filter(() => this.jsonApi.config.applyEnabled !== false),\n    withLatestFrom(\n      this.store,\n      (action: ApiApplyInitAction, storeState: any) => {\n        const ngrxstore = getNgrxJsonApiZone(storeState, action.zoneId);\n        const payload = (action as ApiApplyInitAction).payload;\n        const pending: Array<StoreResource> = getPendingChanges(\n          ngrxstore.data,\n          payload.ids,\n          payload.include\n        );\n\n        if (pending.length === 0) {\n          return of(new ApiApplySuccessAction([], action.zoneId));\n        }\n        const sortedPending = sortPendingChanges(pending);\n        let actions: Array<Observable<Action>> = [];\n        for (let pendingChange of sortedPending) {\n          if (pendingChange.state === 'CREATED') {\n            actions.push(\n              this.handlePendingCreate(pendingChange, action.zoneId)\n            );\n          } else if (pendingChange.state === 'UPDATED') {\n            actions.push(\n              this.handlePendingUpdate(pendingChange, action.zoneId)\n            );\n          } else if (pendingChange.state === 'DELETED') {\n            actions.push(\n              this.handlePendingDelete(pendingChange, action.zoneId)\n            );\n          } else {\n            throw new Error('unknown state ' + pendingChange.state);\n          }\n        }\n        return of(...actions)\n          .concatAll()\n          .pipe(\n            toArray(),\n            map(actions => this.toApplyAction(actions, action.zoneId))\n          );\n      }\n    ),\n    flatMap(actions => actions)\n  );\n\n  private config: NgrxJsonApiConfig;\n\n  constructor(\n    private actions$: Actions,\n    private jsonApi: NgrxJsonApi,\n    private store: Store<any>\n  ) {\n    this.config = this.jsonApi.config;\n  }\n\n  ngOnDestroy() {}\n\n  private toApplyAction(actions: Array<Action>, zoneId: string): any {\n    for (let action of actions) {\n      if (\n        action.type === NgrxJsonApiActionTypes.API_POST_FAIL ||\n        action.type === NgrxJsonApiActionTypes.API_PATCH_FAIL ||\n        action.type === NgrxJsonApiActionTypes.API_DELETE_FAIL\n      ) {\n        return new ApiApplyFailAction(actions, zoneId);\n      }\n    }\n    return new ApiApplySuccessAction(actions, zoneId);\n  }\n\n  private toErrorPayload(\n    query: Query,\n    response: HttpErrorResponse | any\n  ): Payload {\n    let contentType: String = null;\n    if (response && response.headers) {\n      contentType = response.headers.get('Content-Type');\n    }\n    let document = null;\n    if (\n      contentType != null &&\n      contentType.startsWith('application/vnd.api+json')\n    ) {\n      document = response;\n    }\n    if (\n      document &&\n      document.error &&\n      document.error.errors &&\n      document.error.errors.length > 0\n    ) {\n      return {\n        query: query,\n        jsonApiData: document.error,\n      };\n    } else {\n      // transform http to json api error\n      let errors: Array<ResourceError> = [];\n      let error: ResourceError = {\n        status: String(response.status),\n        code: response.statusText,\n      };\n\n      errors.push(error);\n      // got json api errors\n\n      return {\n        query: query,\n        jsonApiData: {\n          errors: errors,\n        },\n      };\n    }\n  }\n\n  private generatePayload(\n    resource: Resource,\n    operation: OperationType\n  ): Payload {\n    return generatePayload(resource, operation);\n  }\n}\n","import * as _ from 'lodash';\n\nimport {\n  HttpHeaders,\n  HttpClient,\n  HttpRequest,\n  // required for building\n  HttpHeaderResponse,\n  HttpProgressEvent,\n  HttpResponse,\n  HttpSentEvent,\n  HttpUserEvent,\n} from '@angular/common/http';\n\nimport { ErrorObservable } from 'rxjs/observable/ErrorObservable';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\n\nimport {\n  Document,\n  NgrxJsonApiConfig,\n  OperationType,\n  ResourceDefinition,\n  Query,\n  QueryParams,\n} from './interfaces';\nimport {\n  generateIncludedQueryParams,\n  generateFieldsQueryParams,\n  generateFilteringQueryParams,\n  generateSortingQueryParams,\n  generateQueryParams,\n} from './utils';\n\nexport class NgrxJsonApi {\n  public headers: HttpHeaders = new HttpHeaders({\n    'Content-Type': 'application/vnd.api+json',\n    Accept: 'application/vnd.api+json',\n  });\n  public requestUrl: string;\n  public definitions = this.config.resourceDefinitions;\n\n  constructor(private http: HttpClient, public config: NgrxJsonApiConfig) {\n    if (this.config.requestHeaders) {\n      for (let name of _.keys(this.config.requestHeaders)) {\n        const value = this.config.requestHeaders[name];\n        this.headers = this.headers.set(name, value);\n      }\n    }\n  }\n\n  private urlBuilder(query: Query, operation: OperationType) {\n    switch (operation) {\n      case 'GET': {\n        if (query.type && query.id) {\n          return this.resourceUrlFor(query.type, query.id);\n        } else if (query.type) {\n          return this.collectionUrlFor(query.type);\n        }\n      }\n      case 'DELETE': {\n        if (query.type && query.id) {\n          return this.resourceUrlFor(query.type, query.id);\n        }\n      }\n      case 'PATCH': {\n        if (query.type && query.id) {\n          return this.resourceUrlFor(query.type, query.id);\n        }\n      }\n      case 'POST': {\n        return this.collectionUrlFor(query.type);\n      }\n    }\n  }\n\n  private collectionPathFor(type: string) {\n    // assume that type == collectionPath if not configured otherwise\n    let definition = _.find(this.definitions, { type: type });\n    if (definition) {\n      return `${definition.collectionPath}`;\n    } else {\n      return type;\n    }\n  }\n\n  private collectionUrlFor(type: string) {\n    let collectionPath = this.collectionPathFor(type);\n    return `${this.config.apiUrl}/${collectionPath}`;\n  }\n\n  private resourcePathFor(type: string, id: string) {\n    let collectionPath = this.collectionPathFor(type);\n    return `${collectionPath}/${encodeURIComponent(id)}`;\n  }\n\n  private resourceUrlFor(type: string, id: string) {\n    let resourcePath = this.resourcePathFor(type, id);\n    return `${this.config.apiUrl}/${resourcePath}`;\n  }\n\n  public find(query: Query): Observable<any> {\n    let _generateIncludedQueryParams = generateIncludedQueryParams;\n    let _generateFilteringQueryParams = generateFilteringQueryParams;\n    let _generateFieldsQueryParams = generateFieldsQueryParams;\n    let _generateSortingQueryParams = generateSortingQueryParams;\n    let _generateQueryParams = generateQueryParams;\n\n    if (this.config.hasOwnProperty('urlBuilder')) {\n      let urlBuilder = this.config.urlBuilder;\n\n      if (urlBuilder.generateIncludedQueryParams) {\n        _generateIncludedQueryParams = urlBuilder.generateIncludedQueryParams;\n      }\n      if (urlBuilder.generateFilteringQueryParams) {\n        _generateFilteringQueryParams = urlBuilder.generateFilteringQueryParams;\n      }\n      if (urlBuilder.generateFieldsQueryParams) {\n        _generateFieldsQueryParams = urlBuilder.generateFieldsQueryParams;\n      }\n      if (urlBuilder.generateSortingQueryParams) {\n        _generateSortingQueryParams = urlBuilder.generateSortingQueryParams;\n      }\n      if (urlBuilder.generateQueryParams) {\n        _generateQueryParams = urlBuilder.generateQueryParams;\n      }\n    }\n\n    let queryParams = '';\n    let includedParam = '';\n    let filteringParams = '';\n    let sortingParams = '';\n    let fieldsParams = '';\n    let offsetParams = '';\n    let limitParams = '';\n    let pageParams = '';\n\n    if (typeof query === undefined) {\n      return Observable.throw('Query not found');\n    }\n\n    if (query.hasOwnProperty('params') && !_.isEmpty(query.params)) {\n      if (_.hasIn(query.params, 'include')) {\n        includedParam = _generateIncludedQueryParams(query.params.include);\n      }\n      if (_.hasIn(query.params, 'filtering')) {\n        filteringParams = _generateFilteringQueryParams(query.params.filtering);\n      }\n      if (_.hasIn(query.params, 'sorting')) {\n        sortingParams = _generateSortingQueryParams(query.params.sorting);\n      }\n      if (_.hasIn(query.params, 'fields')) {\n        fieldsParams = _generateFieldsQueryParams(query.params.fields);\n      }\n      if (_.hasIn(query.params, 'limit')) {\n        limitParams = 'page[limit]=' + query.params.limit;\n      }\n      if (_.hasIn(query.params, 'offset')) {\n        offsetParams = 'page[offset]=' + query.params.offset;\n      }\n      if (_.hasIn(query.params, 'page')) {\n        pageParams = _.keys(query.params.page)\n          .map(key => {\n            return `page[${key}]=${query.params.page[key]}`;\n          })\n          .join('&');\n      }\n    }\n    queryParams = _generateQueryParams(\n      includedParam,\n      filteringParams,\n      sortingParams,\n      fieldsParams,\n      offsetParams,\n      limitParams,\n      pageParams\n    );\n\n    let requestOptions = {\n      method: 'GET',\n      url: this.urlBuilder(query, 'GET') + queryParams,\n    };\n\n    return this.request(requestOptions);\n  }\n\n  public create(query: Query, document: Document): Observable<any> {\n    if (typeof query === undefined) {\n      return Observable.throw('Query not found');\n    }\n\n    if (typeof document === undefined) {\n      return Observable.throw('Data not found');\n    }\n\n    let requestOptions = {\n      method: 'POST',\n      url: this.urlBuilder(query, 'POST'),\n      body: JSON.stringify(document),\n    };\n\n    return this.request(requestOptions);\n  }\n\n  public update(query: Query, document: Document): Observable<any> {\n    if (typeof query === undefined) {\n      return Observable.throw('Query not found');\n    }\n\n    if (typeof document === undefined) {\n      return Observable.throw('Data not found');\n    }\n    let requestOptions = {\n      method: 'PATCH',\n      url: this.urlBuilder(query, 'PATCH'),\n      body: JSON.stringify(document),\n    };\n\n    return this.request(requestOptions);\n  }\n\n  public delete(query: Query): Observable<any> {\n    if (typeof query === undefined) {\n      return Observable.throw('Query not found');\n    }\n\n    let requestOptions = {\n      method: 'DELETE',\n      url: this.urlBuilder(query, 'DELETE'),\n    };\n\n    return this.request(requestOptions);\n  }\n\n  private request(requestOptions: any) {\n    let request: HttpRequest<any>;\n    let newRequestOptions = {\n      ...requestOptions,\n      headers: this.headers,\n      observe: 'response',\n      withCredentials: this.config.requestWithCredentials,\n    };\n\n    if (requestOptions.method === 'GET') {\n      let { method, url, ...init } = newRequestOptions;\n      return this.http.get(url, init);\n    } else if (requestOptions.method === 'POST') {\n      let { method, url, body, ...init } = newRequestOptions;\n      return this.http.post(url, body, init);\n    } else if (requestOptions.method === 'PATCH') {\n      let { method, url, body, ...init } = newRequestOptions;\n      return this.http.patch(url, body, init);\n    } else if (requestOptions.method === 'DELETE') {\n      let { method, url, ...init } = newRequestOptions;\n      return this.http.delete(url, init);\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/let';\n\nimport { NgrxJsonApiService } from './services';\nimport {\n  NGRX_JSON_API_DEFAULT_ZONE,\n  Resource,\n  ResourceIdentifier,\n  StoreResource,\n} from './interfaces';\n\n@Pipe({ name: 'jaSelectStoreResource' })\nexport class SelectStoreResourcePipe implements PipeTransform {\n  constructor(private service: NgrxJsonApiService) {}\n\n  transform(\n    id: ResourceIdentifier,\n    zoneId: string = NGRX_JSON_API_DEFAULT_ZONE\n  ): Observable<StoreResource> {\n    return this.service.getZone(zoneId).selectStoreResource(id);\n  }\n}\n\n@Pipe({ name: 'jaSelectStoreResources' })\nexport class SelectStoreResourcesPipe implements PipeTransform {\n  constructor(private service: NgrxJsonApiService) {}\n\n  transform(\n    ids: ResourceIdentifier[],\n    zoneId: string = NGRX_JSON_API_DEFAULT_ZONE\n  ): Observable<StoreResource[]> {\n    return this.service.getZone(zoneId).selectStoreResources(ids);\n  }\n}\n\n@Pipe({ name: 'denormaliseStoreResource' })\nexport class DenormaliseStoreResourcePipe implements PipeTransform {\n  constructor(private service: NgrxJsonApiService) {}\n\n  transform(\n    obs: Observable<StoreResource | StoreResource[]>,\n    zoneId: string = NGRX_JSON_API_DEFAULT_ZONE\n  ): Observable<StoreResource | StoreResource[]> {\n    return this.service.denormaliseResource(obs, zoneId);\n  }\n}\n\n@Pipe({ name: 'getDenormalisedValue' })\nexport class GetDenormalisedValuePipe implements PipeTransform {\n  constructor(private service: NgrxJsonApiService) {}\n\n  transform(path: string, storeResource: StoreResource): any {\n    return this.service.getDenormalisedValue(path, storeResource);\n  }\n}\n","import * as _ from 'lodash';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/finally';\n\nimport { Store } from '@ngrx/store';\n\nimport {\n  selectManyQueryResult,\n  selectNgrxJsonApiDefaultZone,\n  selectNgrxJsonApiZone,\n  selectOneQueryResult,\n  selectStoreResource,\n  selectStoreResources,\n} from './selectors';\nimport {\n  ApiApplyInitAction,\n  ApiDeleteInitAction,\n  ApiGetInitAction,\n  ApiPatchInitAction,\n  ApiPostInitAction,\n  ApiQueryRefreshAction,\n  ClearStoreAction,\n  CompactStoreAction,\n  DeleteStoreResourceAction,\n  LocalQueryInitAction,\n  ModifyStoreResourceErrorsAction,\n  NewStoreResourceAction,\n  PatchStoreResourceAction,\n  PostStoreResourceAction,\n  RemoveQueryAction,\n} from './actions';\nimport {\n  ManyQueryResult,\n  NGRX_JSON_API_DEFAULT_ZONE,\n  NgrxJsonApiConfig,\n  NgrxJsonApiStore,\n  NgrxJsonApiStoreData,\n  OneQueryResult,\n  Query,\n  QueryResult,\n  Resource,\n  ResourceError,\n  ResourceIdentifier,\n  StoreResource,\n} from './interfaces';\nimport {\n  denormaliseStoreResource,\n  denormaliseStoreResources,\n  getDenormalisedPath,\n  getDenormalisedValue,\n  uuid,\n} from './utils';\n\nexport interface FindOptions {\n  query: Query;\n  fromServer?: boolean;\n  denormalise?: boolean;\n}\n\nexport interface PutQueryOptions {\n  query: Query;\n  fromServer?: boolean;\n}\n\nexport interface PostResourceOptions {\n  resource: Resource;\n  toRemote?: boolean;\n}\n\nexport interface PatchResourceOptions {\n  resource: Resource;\n  toRemote?: boolean;\n}\n\nexport interface NewResourceOptions {\n  resource: Resource;\n}\n\nexport interface DeleteResourceOptions {\n  resourceId: ResourceIdentifier;\n  toRemote?: boolean;\n}\n\n/**\n * This internface is deprecated, do no longer use.\n */\nexport interface Options {\n  query?: Query;\n  denormalise?: boolean;\n  fromServer?: boolean;\n  resource?: Resource;\n  toRemote?: boolean;\n  resourceId?: ResourceIdentifier;\n}\n\n/**\n * Represents an isolated area in the store with its own set of resources and queries.\n * 'api' is the default zone that already historically has been put beneath NgrxJsonApi within the store.\n */\nexport class NgrxJsonApiZoneService {\n  constructor(protected zoneId: string, protected store: Store<any>) {}\n\n  /**\n   * Adds the given query to the store. Any existing query with the same queryId is replaced.\n   * Make use of selectResults(...) to fetch the data.\n\n   * @param query\n   * @param fromServer\n   */\n  public putQuery(options: PutQueryOptions) {\n    let query = options.query;\n    let fromServer = _.isUndefined(options.fromServer)\n      ? true\n      : options.fromServer;\n\n    if (!query.queryId) {\n      throw new Error('to query must have a queryId');\n    }\n\n    if (fromServer) {\n      this.store.dispatch(new ApiGetInitAction(query, this.zoneId));\n    } else {\n      this.store.dispatch(new LocalQueryInitAction(query, this.zoneId));\n    }\n  }\n\n  public refreshQuery(queryId: string) {\n    this.store.dispatch(new ApiQueryRefreshAction(queryId, this.zoneId));\n  }\n\n  public removeQuery(queryId: string) {\n    this.store.dispatch(new RemoveQueryAction(queryId, this.zoneId));\n  }\n\n  /**\n   * Selects the data of the given query.\n   *\n   * @param queryId\n   * @returns observable holding the data as array of resources.\n   */\n  public selectManyResults(\n    queryId: string,\n    denormalize = false\n  ): Observable<ManyQueryResult> {\n    return this.store\n      .let(selectNgrxJsonApiZone(this.zoneId))\n      .let(selectManyQueryResult(queryId, denormalize));\n  }\n\n  /**\n   * Selects the data of the given query.\n   *\n   * @param queryId\n   * @returns observable holding the data as array of resources.\n   */\n  public selectOneResults(\n    queryId: string,\n    denormalize = false\n  ): Observable<OneQueryResult> {\n    return this.store\n      .let(selectNgrxJsonApiZone(this.zoneId))\n      .let(selectOneQueryResult(queryId, denormalize));\n  }\n\n  /**\n   * @param identifier of the resource\n   * @returns observable of the resource\n   */\n  public selectStoreResource(\n    identifier: ResourceIdentifier\n  ): Observable<StoreResource> {\n    return this.store\n      .let(selectNgrxJsonApiZone(this.zoneId))\n      .let(selectStoreResource(identifier));\n  }\n\n  /**\n   * @param identifiers of the resources\n   * @returns observable of the resources\n   */\n  public selectStoreResources(\n    identifiers: ResourceIdentifier[]\n  ): Observable<StoreResource[]> {\n    return this.store\n      .let(selectNgrxJsonApiZone(this.zoneId))\n      .let(selectStoreResources(identifiers));\n  }\n\n  /**\n   * Updates the given resource in the store with the provided data.\n   * Use commit() to send the changes to the remote JSON API endpoint.\n   *\n   * @param resource\n   */\n  public patchResource(options: PatchResourceOptions) {\n    let resource = options.resource;\n    let toRemote = _.isUndefined(options.toRemote) ? false : options.toRemote;\n\n    if (toRemote) {\n      this.store.dispatch(new ApiPatchInitAction(resource, this.zoneId));\n    } else {\n      this.store.dispatch(new PatchStoreResourceAction(resource, this.zoneId));\n    }\n  }\n\n  /**\n   * Creates a new resources that is hold locally in the store\n   * and my later be posted.\n   *\n   * @param resource\n   */\n  public newResource(options: NewResourceOptions) {\n    let resource = options.resource;\n    this.store.dispatch(new NewStoreResourceAction(resource, this.zoneId));\n  }\n\n  /**\n   * Adds the given resource to the store. Any already existing\n   * resource with the same id gets replaced. Use commit() to send\n   * the changes to the remote JSON API endpoint.\n   *\n   * @param resource\n   */\n  public postResource(options: PostResourceOptions) {\n    let resource = options.resource;\n    let toRemote = _.isUndefined(options.toRemote) ? false : options.toRemote;\n\n    if (toRemote) {\n      this.store.dispatch(new ApiPostInitAction(resource, this.zoneId));\n    } else {\n      this.store.dispatch(new PostStoreResourceAction(resource, this.zoneId));\n    }\n  }\n\n  /**\n   * Marks the given resource for deletion.\n   *\n   * @param resourceId\n   */\n  public deleteResource(options: DeleteResourceOptions) {\n    let resourceId = options.resourceId;\n    let toRemote = _.isUndefined(options.toRemote) ? false : options.toRemote;\n\n    if (toRemote) {\n      this.store.dispatch(new ApiDeleteInitAction(resourceId, this.zoneId));\n    } else {\n      this.store.dispatch(\n        new DeleteStoreResourceAction(resourceId, this.zoneId)\n      );\n    }\n  }\n\n  /**\n   * Applies all pending changes to the remote JSON API endpoint.\n   */\n  public apply() {\n    this.store.dispatch(new ApiApplyInitAction({}, this.zoneId));\n  }\n\n  /**\n   * Clear all the contents from the store.\n   */\n  public clear() {\n    this.store.dispatch(new ClearStoreAction(this.zoneId));\n  }\n\n  /**\n   * Compacts the store by removing unreferences and unchanges resources.\n   */\n  public compact() {\n    this.store.dispatch(new CompactStoreAction(this.zoneId));\n  }\n\n  /**\n   * Adds the given errors to the resource with the given id.\n   * @param id\n   * @param errors\n   */\n  public addResourceErrors(\n    id: ResourceIdentifier,\n    errors: Array<ResourceError>\n  ) {\n    this.store.dispatch(\n      new ModifyStoreResourceErrorsAction(\n        {\n          resourceId: id,\n          errors: errors,\n          modificationType: 'ADD',\n        },\n        this.zoneId\n      )\n    );\n  }\n\n  /**\n   * Removes the given errors to the resource with the given id.\n   * @param id\n   * @param errors\n   */\n  public removeResourceErrors(\n    id: ResourceIdentifier,\n    errors: Array<ResourceError>\n  ) {\n    this.store.dispatch(\n      new ModifyStoreResourceErrorsAction(\n        {\n          resourceId: id,\n          errors: errors,\n          modificationType: 'REMOVE',\n        },\n        this.zoneId\n      )\n    );\n  }\n\n  /**\n   * Sets the given errors to the resource with the given id.\n   * @param id\n   * @param errors\n   */\n  public setResourceErrors(\n    id: ResourceIdentifier,\n    errors: Array<ResourceError>\n  ) {\n    this.store.dispatch(\n      new ModifyStoreResourceErrorsAction(\n        {\n          resourceId: id,\n          errors: errors,\n          modificationType: 'SET',\n        },\n        this.zoneId\n      )\n    );\n  }\n}\n\nexport class NgrxJsonApiService extends NgrxJsonApiZoneService {\n  private test = true;\n\n  /**\n   * Keeps current snapshot of the store to allow fast access to resources.\n   */\n  private _storeSnapshot: NgrxJsonApiStore;\n\n  constructor(store: Store<any>, private config: NgrxJsonApiConfig) {\n    super(NGRX_JSON_API_DEFAULT_ZONE, store);\n  }\n\n  public getDefaultZone(): NgrxJsonApiZoneService {\n    return this;\n  }\n\n  public getZone(zoneId: string): NgrxJsonApiZoneService {\n    return new NgrxJsonApiZoneService(zoneId, this.store);\n  }\n\n  public findOne(options: FindOptions): Observable<OneQueryResult> {\n    return <Observable<OneQueryResult>>this.findInternal(options, false);\n  }\n\n  public findMany(options: FindOptions): Observable<ManyQueryResult> {\n    return <Observable<ManyQueryResult>>this.findInternal(options, true);\n  }\n\n  public get storeSnapshot() {\n    if (!this._storeSnapshot) {\n      this.store\n        .let(selectNgrxJsonApiDefaultZone())\n        .subscribe(it => (this._storeSnapshot = it as NgrxJsonApiStore));\n\n      if (!this._storeSnapshot) {\n        throw new Error('failed to initialize store snapshot');\n      }\n    }\n    return this._storeSnapshot;\n  }\n\n  private findInternal(\n    options: FindOptions,\n    multi: boolean\n  ): Observable<QueryResult> {\n    let query = options.query;\n    let fromServer = _.isUndefined(options.fromServer)\n      ? true\n      : options.fromServer;\n    let denormalise = _.isUndefined(options.denormalise)\n      ? false\n      : options.denormalise;\n\n    let newQuery: Query;\n    if (!query.queryId) {\n      newQuery = { ...query, queryId: this.uuid() };\n    } else {\n      newQuery = query;\n    }\n\n    this.putQuery({ query: newQuery, fromServer });\n    let queryResult$: Observable<QueryResult>;\n    if (multi) {\n      queryResult$ = this.selectManyResults(newQuery.queryId, denormalise);\n    } else {\n      queryResult$ = this.selectOneResults(newQuery.queryId, denormalise);\n    }\n    return <Observable<QueryResult>>queryResult$.finally(() =>\n      this.removeQuery(newQuery.queryId)\n    );\n  }\n\n  private uuid() {\n    return uuid();\n  }\n\n  /**\n   * Gets the current persisted state of the given resources.\n   * Consider the use of selectResource(...) to get an observable of the resource.\n   *\n   * @param identifier\n   */\n  public getPersistedResourceSnapshot(identifier: ResourceIdentifier) {\n    let snapshot = this.storeSnapshot;\n    if (\n      snapshot.data[identifier.type] &&\n      snapshot.data[identifier.type][identifier.id]\n    ) {\n      return snapshot.data[identifier.type][identifier.id].persistedResource;\n    }\n    return null;\n  }\n\n  /**\n   * Gets the current state of the given resources in the store.\n   * Consider the use of selectResource(...) to get an observable of the resource.\n   *\n   * @param identifier\n   */\n  public getResourceSnapshot(identifier: ResourceIdentifier) {\n    let snapshot = this.storeSnapshot;\n    if (\n      snapshot.data[identifier.type] &&\n      snapshot.data[identifier.type][identifier.id]\n    ) {\n      return snapshot.data[identifier.type][identifier.id];\n    }\n    return null;\n  }\n\n  public denormaliseResource(\n    storeResource$: Observable<StoreResource | StoreResource[]>,\n    zoneId: string = this.zoneId\n  ): Observable<StoreResource | StoreResource[]> {\n    return storeResource$.combineLatest(\n      this.store.let(selectNgrxJsonApiZone(zoneId)).map(state => state.data),\n      (\n        storeResource: StoreResource | StoreResource[],\n        storeData: NgrxJsonApiStoreData\n      ) => {\n        if (_.isArray(storeResource)) {\n          return denormaliseStoreResources(\n            storeResource as Array<StoreResource>,\n            storeData\n          );\n        } else {\n          let resource = storeResource as StoreResource;\n          return denormaliseStoreResource(resource, storeData) as StoreResource;\n        }\n      }\n    );\n  }\n\n  public getDenormalisedPath(path: string, resourceType: string): string {\n    let pathSeparator = _.get(\n      this.config,\n      'filteringConfig.pathSeparator'\n    ) as string;\n    return getDenormalisedPath(\n      path,\n      resourceType,\n      this.config.resourceDefinitions,\n      pathSeparator\n    );\n  }\n\n  public getDenormalisedValue(path: string, storeResource: StoreResource): any {\n    let pathSeparator = _.get(\n      this.config,\n      'filteringConfig.pathSeparator'\n    ) as string;\n    return getDenormalisedValue(\n      path,\n      storeResource,\n      this.config.resourceDefinitions,\n      pathSeparator\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Action } from '@ngrx/store';\n\nimport {\n  Payload,\n  Resource,\n  ResourceIdentifier,\n  Query,\n  ModifyStoreResourceErrorsPayload,\n} from './interfaces';\n\nexport const NgrxJsonApiActionTypes = {\n  API_POST_INIT: '[NgrxJsonApi] API_POST_INIT',\n  API_POST_SUCCESS: '[NgrxJsonApi] API_POST_SUCCESS',\n  API_POST_FAIL: '[NgrxJsonApi] API_POST_FAIL',\n  API_GET_INIT: '[NgrxJsonApi] API_GET_INIT',\n  API_GET_SUCCESS: '[NgrxJsonApi] API_GET_SUCCESS',\n  API_GET_FAIL: '[NgrxJsonApi] API_GET_FAIL',\n  API_PATCH_INIT: '[NgrxJsonApi] API_PATCH_INIT',\n  API_PATCH_SUCCESS: '[NgrxJsonApi] API_PATCH_SUCCESS',\n  API_PATCH_FAIL: '[NgrxJsonApi] API_PATCH_FAIL',\n  API_DELETE_INIT: '[NgrxJsonApi] API_DELETE_INIT',\n  API_DELETE_SUCCESS: '[NgrxJsonApi] API_DELETE_SUCCESS',\n  API_DELETE_FAIL: '[NgrxJsonApi] API_DELETE_FAIL',\n  API_APPLY_INIT: '[NgrxJsonApi] API_APPLY_INIT',\n  API_APPLY_SUCCESS: '[NgrxJsonApi] API_APPLY_SUCCESS',\n  API_APPLY_FAIL: '[NgrxJsonApi] API_APPLY_FAIL',\n  API_ROLLBACK: '[NgrxJsonApi] API_ROLLBACK',\n  API_QUERY_REFRESH: '[NgrxJsonApi] API_QUERY_REFRESH',\n  LOCAL_QUERY_INIT: '[NgrxJsonApi] LOCAL_QUERY_INIT',\n  LOCAL_QUERY_SUCCESS: '[NgrxJsonApi] LOCAL_QUERY_SUCCESS',\n  LOCAL_QUERY_FAIL: '[NgrxJsonApi] LOCAL_QUERY_FAIL',\n  DELETE_STORE_RESOURCE: '[NgrxJsonApi] DELETE_STORE_RESOURCE',\n  PATCH_STORE_RESOURCE: '[NgrxJsonApi] PATCH_STORE_RESOURCE',\n  NEW_STORE_RESOURCE: '[NgrxJsonApi] NEW_STORE_RESOURCE',\n  POST_STORE_RESOURCE: '[NgrxJsonApi] POST_STORE_RESOURCE',\n  MODIFY_STORE_RESOURCE_ERRORS: '[NgrxJsonApi] MODIFY_STORE_RESOURCE_ERRORS',\n  REMOVE_QUERY: '[NgrxJsonApi] REMOVE_QUERY',\n  COMPACT_STORE: '[NgrxJsonApi] COMPACT_STORE',\n  CLEAR_STORE: '[NgrxJsonApi] CLEAR_STORE',\n};\n\nexport interface ApiApplyInitPayload {\n  /**\n   * optional list of resource identifiers to perform apply. If not specified all change will be applied\n   * to the backend.\n   */\n  ids?: Array<ResourceIdentifier>;\n\n  /**\n   * if the apply action is restricted to a set of resources with the ids parameter. The include flag allows to\n   * specify which relationships to apply as well. Nested relationships are separated by a dot.\n   */\n  include?: Array<string>;\n}\n\nexport interface ApiApplyRollbackPayload extends ApiApplyInitPayload {}\n\nexport abstract class NgrxJsonApiAction implements Action {\n  abstract zoneId?: string;\n  abstract type: string;\n  constructor() {}\n}\n\nexport class ApiApplyInitAction extends NgrxJsonApiAction {\n  readonly type = NgrxJsonApiActionTypes.API_APPLY_INIT;\n  constructor(public payload: ApiApplyInitPayload, public zoneId: string) {\n    super();\n  }\n}\n\nexport class ApiApplySuccessAction extends NgrxJsonApiAction {\n  readonly type = NgrxJsonApiActionTypes.API_APPLY_SUCCESS;\n  constructor(public payload: Array<Action>, public zoneId: string) {\n    super();\n  }\n}\n\nexport class ApiApplyFailAction extends NgrxJsonApiAction {\n  readonly type = NgrxJsonApiActionTypes.API_APPLY_FAIL;\n  constructor(public payload: Array<Action>, public zoneId: string) {\n    super();\n  }\n}\n\nexport class ApiPostInitAction extends NgrxJsonApiAction {\n  readonly type = NgrxJsonApiActionTypes.API_POST_INIT;\n  constructor(public payload: Resource, public zoneId: string) {\n    super();\n  }\n}\n\nexport class ApiPostSuccessAction extends NgrxJsonApiAction {\n  readonly type = NgrxJsonApiActionTypes.API_POST_SUCCESS;\n  constructor(public payload: Payload, public zoneId: string) {\n    super();\n  }\n}\n\nexport class ApiPostFailAction extends NgrxJsonApiAction {\n  readonly type = NgrxJsonApiActionTypes.API_POST_FAIL;\n  constructor(public payload: Payload, public zoneId: string) {\n    super();\n  }\n}\n\nexport class ApiDeleteInitAction extends NgrxJsonApiAction {\n  readonly type = NgrxJsonApiActionTypes.API_DELETE_INIT;\n  constructor(public payload: ResourceIdentifier, public zoneId: string) {\n    super();\n  }\n}\n\nexport class ApiDeleteSuccessAction extends NgrxJsonApiAction {\n  readonly type = NgrxJsonApiActionTypes.API_DELETE_SUCCESS;\n  constructor(public payload: Payload, public zoneId: string) {\n    super();\n  }\n}\n\nexport class ApiDeleteFailAction extends NgrxJsonApiAction {\n  readonly type = NgrxJsonApiActionTypes.API_DELETE_FAIL;\n  constructor(public payload: Payload, public zoneId: string) {\n    super();\n  }\n}\n\nexport class ApiGetInitAction extends NgrxJsonApiAction {\n  readonly type = NgrxJsonApiActionTypes.API_GET_INIT;\n  constructor(public payload: Query, public zoneId: string) {\n    super();\n  }\n}\n\nexport class ApiGetSuccessAction extends NgrxJsonApiAction {\n  readonly type = NgrxJsonApiActionTypes.API_GET_SUCCESS;\n  constructor(public payload: Payload, public zoneId: string) {\n    super();\n  }\n}\n\nexport class ApiGetFailAction extends NgrxJsonApiAction {\n  readonly type = NgrxJsonApiActionTypes.API_GET_FAIL;\n  constructor(public payload: Payload, public zoneId: string) {\n    super();\n  }\n}\n\nexport class ApiRollbackAction extends NgrxJsonApiAction {\n  readonly type = NgrxJsonApiActionTypes.API_ROLLBACK;\n  constructor(public payload: ApiApplyRollbackPayload, public zoneId: string) {\n    super();\n  }\n}\n\nexport class ApiPatchInitAction extends NgrxJsonApiAction {\n  readonly type = NgrxJsonApiActionTypes.API_PATCH_INIT;\n  constructor(public payload: Resource, public zoneId: string) {\n    super();\n  }\n}\n\nexport class ApiPatchSuccessAction extends NgrxJsonApiAction {\n  readonly type = NgrxJsonApiActionTypes.API_PATCH_SUCCESS;\n  constructor(public payload: Payload, public zoneId: string) {\n    super();\n  }\n}\n\nexport class ApiPatchFailAction extends NgrxJsonApiAction {\n  readonly type = NgrxJsonApiActionTypes.API_PATCH_FAIL;\n  constructor(public payload: Payload, public zoneId: string) {\n    super();\n  }\n}\n\nexport class DeleteStoreResourceAction extends NgrxJsonApiAction {\n  readonly type = NgrxJsonApiActionTypes.DELETE_STORE_RESOURCE;\n  constructor(public payload: ResourceIdentifier, public zoneId: string) {\n    super();\n  }\n}\n\nexport class PatchStoreResourceAction extends NgrxJsonApiAction {\n  readonly type = NgrxJsonApiActionTypes.PATCH_STORE_RESOURCE;\n  constructor(public payload: Resource, public zoneId: string) {\n    super();\n  }\n}\n\nexport class NewStoreResourceAction extends NgrxJsonApiAction {\n  readonly type = NgrxJsonApiActionTypes.NEW_STORE_RESOURCE;\n  constructor(public payload: Resource, public zoneId: string) {\n    super();\n  }\n}\n\nexport class PostStoreResourceAction extends NgrxJsonApiAction {\n  readonly type = NgrxJsonApiActionTypes.POST_STORE_RESOURCE;\n  constructor(public payload: Resource, public zoneId: string) {\n    super();\n  }\n}\n\nexport class RemoveQueryAction extends NgrxJsonApiAction {\n  readonly type = NgrxJsonApiActionTypes.REMOVE_QUERY;\n  constructor(public payload: string, public zoneId: string) {\n    super();\n  }\n}\n\nexport class LocalQueryInitAction extends NgrxJsonApiAction {\n  readonly type = NgrxJsonApiActionTypes.LOCAL_QUERY_INIT;\n  constructor(public payload: Query, public zoneId: string) {\n    super();\n  }\n}\n\nexport class LocalQuerySuccessAction extends NgrxJsonApiAction {\n  readonly type = NgrxJsonApiActionTypes.LOCAL_QUERY_SUCCESS;\n  constructor(public payload: Payload, public zoneId: string) {\n    super();\n  }\n}\n\nexport class LocalQueryFailAction extends NgrxJsonApiAction {\n  readonly type = NgrxJsonApiActionTypes.LOCAL_QUERY_FAIL;\n  constructor(public payload: Payload, public zoneId: string) {\n    super();\n  }\n}\n\nexport class CompactStoreAction extends NgrxJsonApiAction {\n  readonly type = NgrxJsonApiActionTypes.COMPACT_STORE;\n  constructor(public zoneId: string) {\n    super();\n  }\n}\n\nexport class ClearStoreAction extends NgrxJsonApiAction {\n  readonly type = NgrxJsonApiActionTypes.CLEAR_STORE;\n  constructor(public zoneId: string) {\n    super();\n  }\n}\n\nexport class ApiQueryRefreshAction extends NgrxJsonApiAction {\n  readonly type = NgrxJsonApiActionTypes.API_QUERY_REFRESH;\n  constructor(public payload: string, public zoneId: string) {\n    super();\n    if (!payload) {\n      throw new Error('no query id provided for ApiQueryRefreshAction');\n    }\n  }\n}\n\nexport class ModifyStoreResourceErrorsAction extends NgrxJsonApiAction {\n  readonly type = NgrxJsonApiActionTypes.MODIFY_STORE_RESOURCE_ERRORS;\n  constructor(\n    public payload: ModifyStoreResourceErrorsPayload,\n    public zoneId: string\n  ) {\n    super();\n  }\n}\n\nexport type NgrxJsonApiActions =\n  | ApiApplyInitAction\n  | ApiApplySuccessAction\n  | ApiApplyFailAction\n  | ApiPostInitAction\n  | ApiPostSuccessAction\n  | ApiPostFailAction\n  | ApiDeleteInitAction\n  | ApiDeleteSuccessAction\n  | ApiDeleteFailAction\n  | ApiGetInitAction\n  | ApiGetSuccessAction\n  | ApiGetFailAction\n  | ApiRollbackAction\n  | ApiPatchInitAction\n  | ApiPatchSuccessAction\n  | ApiPatchFailAction\n  | DeleteStoreResourceAction\n  | PatchStoreResourceAction\n  | PostStoreResourceAction\n  | NewStoreResourceAction\n  | RemoveQueryAction\n  | ApiQueryRefreshAction\n  | LocalQueryInitAction\n  | LocalQuerySuccessAction\n  | LocalQueryFailAction\n  | ModifyStoreResourceErrorsAction\n  | CompactStoreAction\n  | ClearStoreAction;\n","import * as _ from 'lodash';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/concat';\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/combineLatest';\nimport 'rxjs/add/operator/concat';\nimport 'rxjs/add/operator/concatMap';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/let';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/observable/zip';\n\nimport { filter, map } from 'rxjs/operators';\n\nimport { Store, select } from '@ngrx/store';\n\nimport {\n  ManyQueryResult,\n  NGRX_JSON_API_DEFAULT_ZONE,\n  NgrxJsonApiState,\n  NgrxJsonApiStore,\n  NgrxJsonApiStoreResources,\n  NgrxJsonApiZone,\n  OneQueryResult,\n  Resource,\n  ResourceIdentifier,\n  NgrxJsonApiStoreQueries,\n  StoreResource,\n  NgrxJsonApiStoreData,\n  StoreQuery,\n} from './interfaces';\nimport { denormaliseStoreResource, denormaliseStoreResources } from './utils';\n\nexport function selectNgrxJson() {\n  return (state$: Observable<any>) =>\n    (<Store<any>>state$).pipe(\n      select('NgrxJsonApi'),\n      map((it: any) => it as NgrxJsonApiState),\n      filter((it: any) => !_.isUndefined(it))\n    );\n}\n\nexport function selectNgrxJsonApiDefaultZone() {\n  return selectNgrxJsonApiZone(NGRX_JSON_API_DEFAULT_ZONE);\n}\n\nexport function selectNgrxJsonApiZone(zoneId: string) {\n  return (state$: Observable<any>) =>\n    (<Store<any>>state$)\n      .let(selectNgrxJson())\n      .map((it: any) => it.zones[zoneId] as NgrxJsonApiZone);\n}\n\nexport function getNgrxJsonApiZone(state: any, zoneId: string) {\n  return state['NgrxJsonApi']['zones'][zoneId] as NgrxJsonApiZone;\n}\n\nexport function selectStoreQuery(\n  queryId: string\n): (state: Observable<NgrxJsonApiStore>) => Observable<StoreQuery> {\n  return (state$: Observable<NgrxJsonApiStore>) => {\n    return state$.map(state => state.queries[queryId]);\n  };\n}\n\nexport function selectStoreResourcesOfType(\n  type: string\n): (\n  state: Observable<NgrxJsonApiStore>\n) => Observable<NgrxJsonApiStoreResources> {\n  return (state$: Observable<NgrxJsonApiStore>) => {\n    return state$\n      .map(state => state.data)\n      .map(data => (data ? data[type] : undefined));\n  };\n}\n\nexport function selectStoreResource(identifier: ResourceIdentifier) {\n  return (state$: Observable<NgrxJsonApiStore>) => {\n    return state$\n      .let(selectStoreResourcesOfType(identifier.type))\n      .map(\n        resources =>\n          (resources ? resources[identifier.id] : undefined) as StoreResource\n      );\n  };\n}\n\nexport function selectStoreResources(identifiers: ResourceIdentifier[]) {\n  return (state$: Observable<NgrxJsonApiStore>) => {\n    return state$.pipe(\n      map(state => state.data),\n      map(data => {\n        return identifiers.map(identifier => {\n          if (!data || !data[identifier.type]) {\n            return undefined;\n          }\n          return data[identifier.type][identifier.id] as StoreResource;\n        });\n      })\n    );\n  };\n}\n\nexport function selectManyQueryResult(\n  queryId: string,\n  denormalize?: boolean\n): (state: Observable<NgrxJsonApiStore>) => Observable<ManyQueryResult> {\n  return (state$: Observable<NgrxJsonApiStore>) => {\n    return state$.map(state => {\n      let storeQuery = state.queries[queryId];\n      if (!storeQuery) {\n        return undefined;\n      }\n\n      if (_.isEmpty(storeQuery.resultIds)) {\n        let queryResult: ManyQueryResult = {\n          ...storeQuery,\n          data: _.isUndefined(storeQuery.resultIds) ? undefined : [],\n        };\n        return queryResult;\n      } else {\n        let results = storeQuery.resultIds.map(\n          id => (state.data[id.type] ? state.data[id.type][id.id] : undefined)\n        );\n        if (denormalize) {\n          results = denormaliseStoreResources(results, state.data);\n        }\n        return {\n          ...storeQuery,\n          data: results as Array<StoreResource>,\n        };\n      }\n    });\n  };\n}\n\nexport function selectOneQueryResult(\n  queryId: string,\n  denormalize?: boolean\n): (state: Observable<NgrxJsonApiStore>) => Observable<OneQueryResult> {\n  return (state$: Observable<NgrxJsonApiStore>) => {\n    return state$.map(state => {\n      let storeQuery = state.queries[queryId];\n      if (!storeQuery) {\n        return undefined;\n      }\n\n      if (_.isEmpty(storeQuery.resultIds)) {\n        let queryResult: OneQueryResult = {\n          ...storeQuery,\n          data: _.isUndefined(storeQuery.resultIds) ? undefined : null,\n        };\n        return queryResult;\n      } else {\n        if (storeQuery.resultIds.length >= 2) {\n          throw new Error(\n            'expected single result for query ' + storeQuery.query.queryId\n          );\n        }\n\n        let resultId = storeQuery.resultIds[0];\n        let result = state.data[resultId.type]\n          ? state.data[resultId.type][resultId.id]\n          : undefined;\n        if (denormalize) {\n          result = denormaliseStoreResource(result, state.data);\n        }\n        const queryResult: OneQueryResult = {\n          ...storeQuery,\n          data: result,\n        };\n        return queryResult;\n      }\n    });\n  };\n}\n\n/**\n * deprecated, to not use any longer\n */\nexport function getNgrxJsonApiStore(state$: Observable<any>): Observable<any> {\n  return state$.let(selectNgrxJsonApiDefaultZone());\n}\n\n/**\n * deprecated, to not use any longer\n */\nexport class NgrxJsonApiSelectors {\n  constructor() {}\n\n  public getNgrxJsonApiStore$(): (state$: Observable<any>) => Observable<any> {\n    return (state$: Observable<any>): Observable<NgrxJsonApiStore> => {\n      return state$.let(selectNgrxJsonApiDefaultZone());\n    };\n  }\n\n  public getStoreData$(): (\n    state$: Store<NgrxJsonApiStore>\n  ) => Observable<NgrxJsonApiStoreData> {\n    return (\n      state$: Store<NgrxJsonApiStore>\n    ): Observable<NgrxJsonApiStoreData> => {\n      return state$.select('data');\n    };\n  }\n\n  public getStoreResourceOfType$(type: string) {\n    return (state$: Observable<NgrxJsonApiStore>) => {\n      return state$\n        .let(this.getStoreData$())\n        .map(resources => (resources ? resources[type] : undefined));\n    };\n  }\n\n  public getStoreQueries$() {\n    return (state$: Store<NgrxJsonApiStore>) => {\n      return state$.select('queries');\n    };\n  }\n\n  public getResourceQuery$(queryId: string) {\n    return selectStoreQuery(queryId);\n  }\n\n  public getStoreResource$(identifier: ResourceIdentifier) {\n    return selectStoreResource(identifier);\n  }\n\n  public getManyResults$(queryId: string, denormalize: boolean) {\n    return selectManyQueryResult(queryId, denormalize);\n  }\n\n  public getOneResult$(queryId: string, denormalize: boolean) {\n    return selectOneQueryResult(queryId, denormalize);\n  }\n\n  public getPersistedResource$(identifier: ResourceIdentifier) {\n    return (state$: Observable<NgrxJsonApiStore>) => {\n      return state$\n        .let(this.getStoreResource$(identifier))\n        .map(it => (it ? it.persistedResource : undefined));\n    };\n  }\n}\n","import * as _ from 'lodash';\n\nimport { Actions } from '@ngrx/effects';\n\nimport {\n  Direction,\n  Document,\n  FilteringOperator,\n  FilteringParam,\n  NgrxJsonApiFilteringConfig,\n  NgrxJsonApiStore,\n  NgrxJsonApiStoreData,\n  NgrxJsonApiStoreResources,\n  NgrxJsonApiStoreQueries,\n  OperationType,\n  Payload,\n  Query,\n  Resource,\n  ResourceDefinition,\n  ResourceIdentifier,\n  ResourceError,\n  ResourceState,\n  StoreQuery,\n  SortingParam,\n  StoreResource,\n  ErrorModificationType,\n} from './interfaces';\n\nexport function setIn(state: any, path: string, value: any) {\n  let currentValue = _.get(state, path);\n  if (value === currentValue) {\n    return state;\n  }\n  return _.setWith(\n    _.clone(state),\n    path,\n    value,\n    (nsValue: any, key: string, nsObject: any) => {\n      const newObject = _.clone(nsObject);\n      newObject[key] = nsValue;\n      return newObject;\n    }\n  );\n}\n\nexport const denormaliseObject = (\n  resource: Resource,\n  storeData: NgrxJsonApiStoreData,\n  bag: NgrxJsonApiStoreData,\n  denormalizePersisted: boolean = false\n): any => {\n  // this function MUST MUTATE resource\n  if (resource.hasOwnProperty('relationships')) {\n    Object.keys(resource.relationships).forEach(relationshipName => {\n      const orginalRelationship = resource.relationships[relationshipName];\n\n      let data: ResourceIdentifier | Array<ResourceIdentifier> =\n        orginalRelationship.data;\n      if (!_.isUndefined(data)) {\n        let denormalizedRelation;\n        if (data === null) {\n          denormalizedRelation = data;\n        } else if (!_.isArray(data)) {\n          // one relation\n          let relatedRS = getSingleStoreResource(\n            <ResourceIdentifier>data,\n            storeData\n          );\n          denormalizedRelation = denormaliseStoreResource(\n            relatedRS,\n            storeData,\n            bag,\n            denormalizePersisted\n          );\n        } else if ((data as Array<ResourceIdentifier>).length == 0) {\n          denormalizedRelation = data;\n        } else {\n          // many relation\n          let relatedRSs: Array<StoreResource> = getMultipleStoreResource(\n            <ResourceIdentifier[]>data,\n            storeData\n          );\n          denormalizedRelation = relatedRSs.map(r =>\n            denormaliseStoreResource(r, storeData, bag, denormalizePersisted)\n          );\n        }\n\n        const relationship = { ...orginalRelationship };\n        relationship['reference'] = denormalizedRelation;\n        resource.relationships[relationshipName] = relationship;\n      }\n    });\n  }\n  return resource;\n};\n\nexport const denormaliseStoreResources = (\n  items: Array<StoreResource>,\n  storeData: NgrxJsonApiStoreData,\n  bag: any = {},\n  denormalizePersisted: boolean = false\n): Array<StoreResource> => {\n  let results: Array<StoreResource> = [];\n  for (let item of items) {\n    results.push(\n      denormaliseStoreResource(item, storeData, bag, denormalizePersisted)\n    );\n  }\n  return results;\n};\n\nexport const denormaliseStoreResource = (\n  item: StoreResource,\n  storeData: NgrxJsonApiStoreData,\n  bag: any = {},\n  denormalizePersisted: boolean = false\n): any => {\n  if (!item) {\n    return null;\n  }\n  if (_.isUndefined(bag[item.type])) {\n    bag[item.type] = {};\n  }\n  if (_.isUndefined(bag[item.type][item.id])) {\n    let storeResource: StoreResource = { ...item };\n    if (item.relationships) {\n      storeResource.relationships = { ...item.relationships };\n    }\n\n    bag[storeResource.type][storeResource.id] = storeResource;\n    storeResource = denormaliseObject(\n      storeResource,\n      storeData,\n      bag,\n      denormalizePersisted\n    );\n    if (storeResource.persistedResource && denormalizePersisted) {\n      storeResource.persistedResource = denormaliseObject(\n        storeResource.persistedResource,\n        storeData,\n        bag,\n        denormalizePersisted\n      );\n    }\n  }\n\n  return bag[item.type][item.id];\n};\n\nexport const getSingleStoreResource = (\n  resourceId: ResourceIdentifier,\n  storeData: NgrxJsonApiStoreData\n): StoreResource => {\n  return _.get(storeData, [resourceId.type, resourceId.id], null);\n};\n\nexport const getMultipleStoreResource = (\n  resourceIds: Array<ResourceIdentifier>,\n  resources: NgrxJsonApiStoreData\n): Array<StoreResource> => {\n  return resourceIds.map(id => getSingleStoreResource(id, resources));\n};\n\nexport const getDenormalisedPath = (\n  path: string,\n  baseResourceType: string,\n  resourceDefinitions: Array<ResourceDefinition>,\n  pathSeparator?: string\n): string => {\n  let denormPath: string[] = [];\n  if (_.isUndefined(pathSeparator)) {\n    pathSeparator = '.';\n  }\n  let fields: Array<string> = path.split(pathSeparator);\n  let currentResourceType = baseResourceType;\n  for (let i = 0; i < fields.length; i++) {\n    let definition = _.find(resourceDefinitions, { type: currentResourceType });\n\n    if (_.isUndefined(definition)) {\n      throw new Error('Definition not found');\n    }\n    // if both attributes and relationships are missing, raise an error\n    if (\n      _.isUndefined(definition.attributes) &&\n      _.isUndefined(definition.relationships)\n    ) {\n      throw new Error('Attributes or Relationships must be provided');\n    }\n\n    if (definition.attributes.hasOwnProperty(fields[i])) {\n      denormPath.push('attributes', fields[i]);\n      break;\n    } else if (definition.relationships.hasOwnProperty(fields[i])) {\n      let resourceRelation = definition.relationships[fields[i]];\n      if (resourceRelation.relationType === 'hasMany') {\n        if (i !== fields.length - 1) {\n          throw new Error('Cannot filter past a hasMany relation');\n        } else {\n          denormPath.push('relationships', fields[i], 'reference');\n        }\n      } else {\n        currentResourceType = resourceRelation.type;\n        denormPath.push('relationships', fields[i], 'reference');\n      }\n    } else {\n      throw new Error('Cannot find field in attributes or relationships');\n    }\n  }\n  return denormPath.join(pathSeparator);\n};\n\nexport const getDenormalisedValue = (\n  path: string,\n  storeResource: StoreResource,\n  resourceDefinitions: Array<ResourceDefinition>,\n  pathSeparator?: string\n) => {\n  let denormalisedPath = getDenormalisedPath(\n    path,\n    storeResource.type,\n    resourceDefinitions,\n    pathSeparator\n  );\n  return _.get(storeResource, denormalisedPath);\n};\n\n/**\n * Given two objects, it will merge the second in the first.\n *\n */\nexport const updateResourceObject = (\n  original: Resource,\n  source: Resource\n): Resource => {\n  // by default arrays would make use of concat.\n  function customizer(objValue: any, srcValue: any) {\n    if (_.isArray(objValue)) {\n      return srcValue;\n    }\n  }\n\n  return _.mergeWith({}, original, source, customizer);\n};\n\n/**\n * Insert a StoreResource given the Resource and the StoreResources\n *\n */\nexport const insertStoreResource = (\n  storeResources: NgrxJsonApiStoreResources,\n  resource: Resource,\n  fromServer: boolean\n): NgrxJsonApiStoreResources => {\n  let newStoreResources = { ...storeResources };\n  if (fromServer) {\n    newStoreResources[resource.id] = {\n      ...resource,\n      persistedResource: resource,\n      state: 'IN_SYNC',\n      errors: [],\n      loading: false,\n    } as StoreResource;\n  } else {\n    newStoreResources[resource.id] = {\n      ...resource,\n      persistedResource: null,\n      state: 'CREATED',\n      errors: [],\n      loading: false,\n    } as StoreResource;\n  }\n  return _.isEqual(storeResources, newStoreResources)\n    ? storeResources\n    : newStoreResources;\n};\n\n/**\n * Removes a StoreResource given the Resource and the StoreResources\n *\n */\nexport const removeStoreResource = (\n  storeData: NgrxJsonApiStoreData,\n  resourceId: ResourceIdentifier\n): NgrxJsonApiStoreData => {\n  if (storeData[resourceId.type][resourceId.id]) {\n    let newState: NgrxJsonApiStoreData = { ...storeData };\n    newState[resourceId.type] = { ...newState[resourceId.type] };\n    delete newState[resourceId.type][resourceId.id];\n    return newState;\n  }\n  return storeData;\n};\n\n/**\n * Updates the state of a StoreResource in the store.\n *\n * @param storeData\n * @param resourceId\n * @param resourceState\n * @param loading\n * @returns\n */\nexport const updateResourceState = (\n  storeData: NgrxJsonApiStoreData,\n  resourceId: ResourceIdentifier,\n  resourceState?: ResourceState,\n  loading?: OperationType\n): NgrxJsonApiStoreData => {\n  if (\n    _.isUndefined(storeData[resourceId.type]) ||\n    _.isUndefined(storeData[resourceId.type][resourceId.id])\n  ) {\n    if (resourceState === 'DELETED') {\n      let newState: NgrxJsonApiStoreData = { ...storeData };\n      newState[resourceId.type] = { ...newState[resourceId.type] };\n      newState[resourceId.type][resourceId.id] = {\n        ...newState[resourceId.type][resourceId.id],\n      };\n      newState[resourceId.type][resourceId.id] = {\n        type: resourceId.type,\n        id: resourceId.id,\n        persistedResource: null,\n      } as StoreResource;\n      newState[resourceId.type][resourceId.id].state = 'NOT_LOADED';\n      return newState;\n    } else {\n      return storeData;\n    }\n  }\n  let newState: NgrxJsonApiStoreData = { ...storeData };\n  newState[resourceId.type] = { ...newState[resourceId.type] };\n  newState[resourceId.type][resourceId.id] = {\n    ...newState[resourceId.type][resourceId.id],\n  };\n  if (resourceState !== null) {\n    newState[resourceId.type][resourceId.id].state = resourceState;\n  }\n  if (loading != null) {\n    newState[resourceId.type][resourceId.id].loading = loading;\n  }\n  return newState;\n};\n\n/**\n * Check equality of resource and ignore additional contents used by the\n * store (state, persistedResource, etc.)\n * @param resource0\n * @param resource1\n * @returns\n */\nexport const isEqualResource = (\n  resource0: Resource,\n  resource1: Resource\n): boolean => {\n  if (resource0 === resource1) {\n    return true;\n  }\n  if ((resource0 !== null) !== (resource1 !== null)) {\n    return false;\n  }\n\n  return (\n    _.isEqual(resource0.id, resource1.id) &&\n    _.isEqual(resource0.type, resource1.type) &&\n    _.isEqual(resource0.attributes, resource1.attributes) &&\n    _.isEqual(resource0.meta, resource1.meta) &&\n    _.isEqual(resource0.links, resource1.links) &&\n    _.isEqual(resource0.relationships, resource1.relationships)\n  );\n};\n\nexport const updateStoreResource = (\n  state: NgrxJsonApiStoreResources,\n  resource: Resource,\n  fromServer: boolean\n): NgrxJsonApiStoreResources => {\n  let foundStoreResource = state[resource.id];\n  let persistedResource = state[resource.id].persistedResource;\n\n  let newResource: Resource;\n  let newResourceState: ResourceState;\n  if (fromServer) {\n    // form server, override everything\n    // TODO need to handle check and keep local updates?\n    newResource = resource;\n    persistedResource = resource;\n    newResourceState = 'IN_SYNC';\n  } else {\n    let mergedResource = updateResourceObject(foundStoreResource, resource);\n    if (isEqualResource(mergedResource, persistedResource)) {\n      // no changes anymore, do nothing\n      newResource = persistedResource;\n      newResourceState = 'IN_SYNC';\n    } else {\n      // merge changes and mark as CREATED or UPDATED depending on whether\n      // an original version is available\n      newResource = mergedResource;\n      if (persistedResource !== null) {\n        newResourceState = 'UPDATED';\n      } else if (foundStoreResource.state === 'NEW') {\n        newResourceState = 'NEW';\n      } else {\n        newResourceState = 'CREATED';\n      }\n    }\n  }\n\n  let newState = { ...state };\n  newState[resource.id] = {\n    ...newResource,\n    persistedResource: persistedResource,\n    state: newResourceState,\n    errors: [],\n    loading: false,\n  } as StoreResource;\n\n  return _.isEqual(newState[resource.id], state[resource.id])\n    ? state\n    : newState;\n};\n\nexport const updateQueriesForDeletedResource = (\n  state: NgrxJsonApiStoreQueries,\n  deletedId: ResourceIdentifier\n): NgrxJsonApiStoreQueries => {\n  let newState: NgrxJsonApiStoreQueries = state;\n  for (let queryId in state) {\n    if (state.hasOwnProperty(queryId)) {\n      let queryState = state[queryId];\n      if (\n        queryState.query.id === deletedId.id &&\n        queryState.query.type === deletedId.type\n      ) {\n        // found a query for a resource that was deleted => modify to 404\n        newState = clearQueryResult(newState, queryState.query.queryId);\n        let notFoundError: ResourceError = { code: '404', status: 'Not Found' };\n        newState[queryState.query.queryId].errors = [notFoundError];\n      }\n    }\n  }\n  return newState;\n};\n\nexport const updateResourceErrorsForQuery = (\n  storeData: NgrxJsonApiStoreData,\n  query: Query,\n  document: Document\n): NgrxJsonApiStoreData => {\n  if (!query.type || !query.id || document.data instanceof Array) {\n    throw new Error('invalid parameters');\n  }\n  return updateResourceErrors(\n    storeData,\n    { id: query.id, type: query.type },\n    document.errors,\n    'SET'\n  );\n};\n\nexport const updateResourceErrors = (\n  storeData: NgrxJsonApiStoreData,\n  id: ResourceIdentifier,\n  errors: Array<ResourceError>,\n  modificationType: ErrorModificationType\n): NgrxJsonApiStoreData => {\n  if (!storeData[id.type] || !storeData[id.type][id.id]) {\n    return storeData;\n  }\n  let newState: NgrxJsonApiStoreData = { ...storeData };\n  newState[id.type] = { ...newState[id.type] };\n  let storeResource = { ...newState[id.type][id.id] };\n\n  if (modificationType === 'SET') {\n    storeResource.errors = [];\n    if (errors) {\n      storeResource.errors.push(...errors);\n    }\n  } else if (modificationType === 'ADD') {\n    let currentErrors = storeResource.errors;\n    storeResource.errors = [];\n    if (currentErrors) {\n      storeResource.errors.push(...currentErrors);\n    }\n    if (errors) {\n      storeResource.errors.push(...errors);\n    }\n  } else {\n    let currentErrors = storeResource.errors;\n    storeResource.errors = [];\n    if (currentErrors) {\n      for (let currentError of currentErrors) {\n        let remove =\n          errors && errors.filter(it => _.isEqual(it, currentError)).length > 0;\n        if (!remove) {\n          storeResource.errors.push(currentError);\n        }\n      }\n    }\n  }\n  newState[id.type][id.id] = storeResource;\n  return newState;\n};\n\nfunction rollbackResource(\n  newState: NgrxJsonApiStoreData,\n  type: string,\n  id: string\n) {\n  let storeResource = newState[type][id];\n  if (!storeResource.persistedResource) {\n    delete newState[type][id];\n  } else if (storeResource.state !== 'IN_SYNC') {\n    newState[type][id] = <StoreResource>{\n      ...newState[type][id],\n      state: 'IN_SYNC',\n      resource: newState[type][id].persistedResource,\n    };\n  }\n}\n\nexport const rollbackStoreResources = (\n  storeData: NgrxJsonApiStoreData,\n  ids: Array<ResourceIdentifier>,\n  include: Array<string>\n): NgrxJsonApiStoreData => {\n  let newState: NgrxJsonApiStoreData = { ...storeData };\n\n  if (_.isUndefined(ids)) {\n    Object.keys(newState).forEach(type => {\n      newState[type] = { ...newState[type] };\n      Object.keys(newState[type]).forEach(id => {\n        rollbackResource(newState, type, id);\n      });\n    });\n  } else {\n    let modifiedResources = getPendingChanges(newState, ids, include, true);\n    for (let modifiedResource of modifiedResources) {\n      rollbackResource(newState, modifiedResource.type, modifiedResource.id);\n    }\n  }\n  return newState;\n};\n\nexport const deleteStoreResources = (\n  storeData: NgrxJsonApiStoreData,\n  query: Query\n) => {\n  let newState = { ...storeData };\n  // if an id is not provided, all resources of the provided type will be deleted\n  if (typeof query.id === 'undefined') {\n    newState[query.type] = {};\n  } else {\n    newState[query.type] = _.omit(newState[query.type], [\n      query.id,\n    ]) as NgrxJsonApiStoreResources;\n  }\n  return newState;\n};\n\nexport const clearQueryResult = (\n  storeData: NgrxJsonApiStoreQueries,\n  queryId: string\n) => {\n  let newQuery = { ...storeData[queryId] };\n  delete newQuery.resultIds;\n  delete newQuery.errors;\n  delete newQuery.meta;\n  delete newQuery.links;\n\n  let newState = { ...storeData };\n  newState[queryId] = newQuery;\n  return newState;\n};\n\n/**\n * Updates a given storeData by either inserting a resource or updating\n * an existing resource.\n *\n * @param storeData\n * @param resource\n * @param fromServer\n * @param override\n *\n * @returns a new NgrxJsonApiStoreData with an inserted/updated resource.\n */\nexport const updateStoreDataFromResource = (\n  storeData: NgrxJsonApiStoreData,\n  resource: Resource,\n  fromServer: boolean,\n  override: boolean\n): NgrxJsonApiStoreData => {\n  if (_.isUndefined(storeData[resource.type])) {\n    let newStoreData: NgrxJsonApiStoreData = { ...storeData };\n    newStoreData[resource.type] = {};\n    newStoreData[resource.type] = insertStoreResource(\n      newStoreData[resource.type],\n      resource,\n      fromServer\n    );\n    return newStoreData;\n  } else if (_.isUndefined(storeData[resource.type][resource.id]) || override) {\n    let updatedStoreResources = insertStoreResource(\n      storeData[resource.type],\n      resource,\n      fromServer\n    );\n\n    // check if nothing has changed\n    if (updatedStoreResources !== storeData[resource.type]) {\n      let newStoreData: NgrxJsonApiStoreData = { ...storeData };\n      newStoreData[resource.type] = updatedStoreResources;\n      return newStoreData;\n    }\n    return storeData;\n  } else {\n    let updatedStoreResources = updateStoreResource(\n      storeData[resource.type],\n      resource,\n      fromServer\n    );\n\n    // check if nothing has changed\n    if (updatedStoreResources !== storeData[resource.type]) {\n      let newStoreData: NgrxJsonApiStoreData = { ...storeData };\n      newStoreData[resource.type] = updatedStoreResources;\n      return newStoreData;\n    }\n    return storeData;\n  }\n};\n\nexport const updateStoreDataFromPayload = (\n  storeData: NgrxJsonApiStoreData,\n  payload: Document\n): NgrxJsonApiStoreData => {\n  let data = <Array<Resource> | Resource>_.get(payload, 'data');\n\n  if (_.isUndefined(data)) {\n    return storeData;\n  }\n\n  let resources: Array<Resource> = _.isArray(data)\n    ? <Resource[]>data\n    : <Resource[]>[data];\n  let included = <Array<Resource>>_.get(payload, 'included');\n  if (!_.isUndefined(included)) {\n    resources = [...resources, ...included];\n  }\n\n  let newStoreData: NgrxJsonApiStoreData = { ...storeData };\n\n  let hasChange = false;\n  for (const resource of resources) {\n    const storeResource = {\n      ...resource,\n      persistedResource: resource,\n      state: 'IN_SYNC',\n      errors: [],\n      loading: false,\n    } as StoreResource;\n\n    if (!_.isEqual(storeResource, resource)) {\n      hasChange = true;\n      if (!newStoreData[resource.type]) {\n        newStoreData[resource.type] = {};\n      } else if (newStoreData[resource.type] === storeData[resource.type]) {\n        newStoreData[resource.type] = { ...storeData[resource.type] };\n      }\n      newStoreData[resource.type][resource.id] = storeResource;\n    }\n  }\n  return hasChange ? newStoreData : storeData;\n};\n\n/**\n * Updates the storeQueries by either adding a new ResourceQueryStore\n * or modifying an existing one.\n *\n * @param storeQueries\n * @param query\n *\n * @return a new NgrxJsonApiStoreQueries with the inserted/modified\n * ResourceQueryStore\n */\nexport const updateQueryParams = (\n  storeQueries: NgrxJsonApiStoreQueries,\n  query: Query\n): NgrxJsonApiStoreQueries => {\n  if (!query.queryId) {\n    return storeQueries;\n  }\n\n  let newStoreQuery = { ...storeQueries[query.queryId] };\n  newStoreQuery.loading = true;\n  newStoreQuery.query = _.cloneDeep(query);\n\n  if (_.isUndefined(newStoreQuery.errors)) {\n    newStoreQuery.errors = [];\n  }\n\n  let newStoreQueries: NgrxJsonApiStoreQueries = { ...storeQueries };\n  newStoreQueries[newStoreQuery.query.queryId] = newStoreQuery;\n  return newStoreQueries;\n};\n\n/**\n * Updates the query results for given a queryId and the results.\n */\nexport const updateQueryResults = (\n  storeQueries: NgrxJsonApiStoreQueries,\n  queryId: string,\n  document: Document\n): NgrxJsonApiStoreQueries => {\n  let storeQuery: StoreQuery = storeQueries[queryId];\n  if (storeQuery) {\n    let data = _.isArray(document.data) ? document.data : [document.data];\n    let newQueryStore = {\n      ...storeQuery,\n      resultIds: data.map(it => (it ? toResourceIdentifier(it) : [])),\n      meta: document.meta,\n      links: document.links,\n      loading: false,\n    };\n\n    if (!_.isEqual(newQueryStore, storeQuery)) {\n      let newState: NgrxJsonApiStoreQueries = { ...storeQueries };\n      newState[queryId] = <StoreQuery>newQueryStore;\n      return newState;\n    }\n  }\n  return storeQueries;\n};\n\n/**\n * Update the query errors given the queryId and a storeQueries and the\n * document containing the error\n *\n *\n */\nexport const updateQueryErrors = (\n  storeQueries: NgrxJsonApiStoreQueries,\n  queryId: string,\n  document: Document\n): NgrxJsonApiStoreQueries => {\n  if (!queryId || !storeQueries[queryId]) {\n    return storeQueries;\n  }\n  let newState = { ...storeQueries };\n  let newStoreQuery = { ...newState[queryId] };\n  newStoreQuery.errors = [];\n  newStoreQuery.loading = false;\n  if (document.errors) {\n    newStoreQuery.errors.push(...document.errors);\n  }\n  newState[queryId] = newStoreQuery;\n  return newState;\n};\n\n/**\n * Removes a query given its queryId from the NgrxJsonApiStoreQueries.\n */\nexport const removeQuery = (\n  storeQueries: NgrxJsonApiStoreQueries,\n  queryId: string\n): NgrxJsonApiStoreQueries => {\n  let newState: NgrxJsonApiStoreQueries = { ...storeQueries };\n  delete newState[queryId];\n  return newState;\n};\n\n/**\n * Given a resource, it will return an object containing the resource id and type.\n */\nexport const toResourceIdentifier = (\n  resource: Resource\n): ResourceIdentifier => {\n  return { type: resource.type, id: resource.id };\n};\n\n/**\n * Get the value for the last field in a given fitering path.\n *\n * @param path\n * @param baseStoreResource\n * @param storeData\n * @param resourceDefinitions\n * @param pathSepartor\n * @returns the value of the last field in the path.\n */\nexport const getResourceFieldValueFromPath = (\n  path: string,\n  baseStoreResource: StoreResource,\n  storeData: NgrxJsonApiStoreData,\n  resourceDefinitions: Array<ResourceDefinition>,\n  pathSeparator?: string\n) => {\n  if (_.isUndefined(pathSeparator)) {\n    pathSeparator = '.';\n  }\n  let fields: Array<string> = path.split(pathSeparator);\n  let currentStoreResource = baseStoreResource;\n  for (let i = 0; i < fields.length; i++) {\n    let definition = _.find(resourceDefinitions, {\n      type: currentStoreResource.type,\n    });\n\n    if (_.isUndefined(definition)) {\n      throw new Error('Definition not found');\n    }\n    // if both attributes and relationships are missing, raise an error\n    if (\n      _.isUndefined(definition.attributes) &&\n      _.isUndefined(definition.relationships)\n    ) {\n      throw new Error('Attributes or Relationships must be provided');\n    }\n\n    if (fields[i] === 'id') {\n      return _.get(currentStoreResource, 'id', null);\n    } else if (definition.attributes.hasOwnProperty(fields[i])) {\n      return _.get(currentStoreResource, 'attributes.' + fields[i], null);\n    } else if (definition.relationships.hasOwnProperty(fields[i])) {\n      if (i === fields.length - 1) {\n        throw new Error(\n          'The last field in the filtering path cannot be a relation'\n        );\n      }\n      let resourceRelation = definition.relationships[fields[i]];\n      if (resourceRelation.relationType === 'hasMany') {\n        throw new Error('Cannot filter past a hasMany relation');\n      } else {\n        let relation = _.get(\n          currentStoreResource,\n          'relationships.' + fields[i],\n          null\n        );\n        if (!relation || !relation.data) {\n          return null;\n        } else {\n          let relatedPath = [resourceRelation.type, relation.data.id];\n          currentStoreResource = _.get<any, any>(storeData, relatedPath);\n        }\n      }\n    } else {\n      throw new Error('Cannot find field in attributes or relationships');\n    }\n    if (_.isUndefined(currentStoreResource)) {\n      return null;\n    }\n  }\n};\n\nexport const filterResources = (\n  resources: NgrxJsonApiStoreResources,\n  storeData: NgrxJsonApiStoreData,\n  query: Query,\n  resourceDefinitions: Array<ResourceDefinition>,\n  filteringConfig?: NgrxJsonApiFilteringConfig\n) => {\n  return _.filter(resources, resource => {\n    if (\n      query.hasOwnProperty('params') &&\n      query.params.hasOwnProperty('filtering')\n    ) {\n      return query.params.filtering.every(element => {\n        let pathSeparator;\n        let filteringOperators;\n\n        if (!_.isUndefined(filteringConfig)) {\n          pathSeparator = <string>_.get(filteringConfig, 'pathSeparator');\n          filteringOperators = <Array<FilteringOperator>>_.get(\n            filteringConfig,\n            'filteringOperators'\n          );\n        }\n        // resource type and attribute\n        let resourceFieldValue = getResourceFieldValueFromPath(\n          element.path,\n          resource,\n          storeData,\n          resourceDefinitions,\n          pathSeparator\n        );\n        if (!resourceFieldValue) {\n          return false;\n        }\n\n        let operator = <FilteringOperator>_.find(filteringOperators, {\n          name: element.operator,\n        });\n\n        if (operator) {\n          return operator.comparison(element.value, resourceFieldValue);\n        }\n\n        element.operator = element.hasOwnProperty('operator')\n          ? element.operator\n          : 'iexact';\n\n        switch (element.operator) {\n          case 'iexact':\n            if (_.isString(element.value) && _.isString(resourceFieldValue)) {\n              return (\n                element.value.toLowerCase() === resourceFieldValue.toLowerCase()\n              );\n            } else {\n              return element.value === resourceFieldValue;\n            }\n\n          case 'exact':\n            return element.value === resourceFieldValue;\n\n          case 'contains':\n            return _.includes(resourceFieldValue, element.value);\n\n          case 'icontains':\n            return _.includes(\n              resourceFieldValue.toLowerCase(),\n              element.value.toLowerCase()\n            );\n\n          case 'in':\n            if (_.isArray(element.value)) {\n              return _.includes(element.value, resourceFieldValue);\n            } else {\n              return _.includes([element.value], resourceFieldValue);\n            }\n          case 'gt':\n            return element.value > resourceFieldValue;\n\n          case 'gte':\n            return element.value >= resourceFieldValue;\n\n          case 'lt':\n            return element.value < resourceFieldValue;\n\n          case 'lte':\n            return element.value <= resourceFieldValue;\n\n          case 'startswith':\n            return _.startsWith(resourceFieldValue, element.value);\n\n          case 'istartswith':\n            return _.startsWith(\n              resourceFieldValue.toLowerCase(),\n              element.value.toLowerCase()\n            );\n\n          case 'endswith':\n            return _.endsWith(resourceFieldValue, element.value);\n\n          case 'iendswith':\n            return _.endsWith(\n              resourceFieldValue.toLowerCase(),\n              element.value.toLowerCase()\n            );\n\n          default:\n            return true;\n        }\n      });\n    } else {\n      return true;\n    }\n  });\n};\n\nexport const generateIncludedQueryParams = (\n  included: Array<string>\n): string => {\n  if (_.isEmpty(included)) {\n    return '';\n  }\n\n  return 'include=' + included.join();\n};\n\nexport const generateFieldsQueryParams = (fields: Array<string>): string => {\n  if (_.isEmpty(fields)) {\n    return '';\n  }\n\n  return 'fields=' + fields.join();\n};\n\nexport const generateFilteringQueryParams = (\n  filtering: Array<FilteringParam>\n): string => {\n  if (_.isEmpty(filtering)) {\n    return '';\n  }\n  let filteringParams = filtering.map(f => {\n    return (\n      'filter' +\n      (f.path ? '[' + f.path + ']' : '') +\n      (f.operator ? '[' + f.operator + ']' : '') +\n      '=' +\n      encodeURIComponent(f.value)\n    );\n  });\n  return filteringParams.join('&');\n};\n\nexport const generateSortingQueryParams = (\n  sorting: Array<SortingParam>\n): string => {\n  if (_.isEmpty(sorting)) {\n    return '';\n  }\n  return (\n    'sort=' +\n    sorting\n      .map(f => (f.direction === Direction.ASC ? '' : '-') + f.api)\n      .join(',')\n  );\n};\n\nexport const generateQueryParams = (...params: Array<string>) => {\n  let newParams = params.filter(p => p !== '');\n  if (newParams.length !== 0) {\n    return '?' + newParams.join('&');\n  } else {\n    return '';\n  }\n};\n\nexport const generatePayload = (\n  resource: StoreResource,\n  operation: OperationType\n): Payload => {\n  let payload: Payload = {\n    query: {\n      type: resource.type,\n    },\n  };\n\n  // the data to be updated or created\n  if (operation === 'POST' || operation === 'PATCH') {\n    payload.jsonApiData = {\n      data: {\n        id: resource.id,\n        type: resource.type,\n        attributes: resource.attributes,\n        relationships: resource.relationships,\n      },\n      ...(resource.meta\n        ? {\n            meta: resource.meta,\n          }\n        : null),\n    };\n  }\n\n  if (operation === 'POST' && resource.hasTemporaryId) {\n    delete payload.jsonApiData.data.id;\n  }\n\n  if (resource.isMetaOnly) {\n    delete payload.jsonApiData.data;\n  }\n\n  // 'DELETE' only needs a query and it also needs an id in its query\n  // 'PATCH' also needs an id in its query\n  // 'POST' needed locally to allow to write back errors to store if id is available\n  if (operation === 'PATCH' || operation === 'DELETE' || operation === 'POST') {\n    payload.query.id = resource.id;\n  }\n\n  return payload;\n};\n\n/* tslint:disable */\nexport const uuid = () => {\n  let lut = [];\n  for (let i = 0; i < 256; i++) {\n    lut[i] = (i < 16 ? '0' : '') + i.toString(16);\n  }\n  let d0 = (Math.random() * 0xffffffff) | 0;\n  let d1 = (Math.random() * 0xffffffff) | 0;\n  let d2 = (Math.random() * 0xffffffff) | 0;\n  let d3 = (Math.random() * 0xffffffff) | 0;\n  return (\n    lut[d0 & 0xff] +\n    lut[(d0 >> 8) & 0xff] +\n    lut[(d0 >> 16) & 0xff] +\n    lut[(d0 >> 24) & 0xff] +\n    '-' +\n    lut[d1 & 0xff] +\n    lut[(d1 >> 8) & 0xff] +\n    '-' +\n    lut[((d1 >> 16) & 0x0f) | 0x40] +\n    lut[(d1 >> 24) & 0xff] +\n    '-' +\n    lut[(d2 & 0x3f) | 0x80] +\n    lut[(d2 >> 8) & 0xff] +\n    '-' +\n    lut[(d2 >> 16) & 0xff] +\n    lut[(d2 >> 24) & 0xff] +\n    lut[d3 & 0xff] +\n    lut[(d3 >> 8) & 0xff] +\n    lut[(d3 >> 16) & 0xff] +\n    lut[(d3 >> 24) & 0xff]\n  );\n};\n/* tslint:enable */\n\nconst toKey = (id: ResourceIdentifier) => {\n  return id.id + '@' + id.type;\n};\n\nconst collectQueryResults = (state: NgrxJsonApiStore, usedResources: any) => {\n  for (let queryName in state.queries) {\n    if (state.queries.hasOwnProperty(queryName)) {\n      let query = state.queries[queryName];\n      if (query.resultIds) {\n        for (let resultId of query.resultIds) {\n          usedResources[toKey(resultId)] = true;\n        }\n      }\n    }\n  }\n};\n\nconst collectPendingChanges = (state: NgrxJsonApiStore, usedResources: any) => {\n  for (let type in state.data) {\n    if (state.data.hasOwnProperty(type)) {\n      let resources = state.data[type];\n      for (let id in resources) {\n        if (resources.hasOwnProperty(id)) {\n          let resource = resources[id];\n          if (resource.state !== 'IN_SYNC') {\n            usedResources[toKey(resource)] = true;\n          }\n        }\n      }\n    }\n  }\n};\n\nconst collectReferencesForResource = (\n  state: NgrxJsonApiStore,\n  usedResources: any,\n  resource: Resource\n) => {\n  let hasChanges: boolean;\n  for (let relationshipName in resource.relationships) {\n    if (resource.relationships.hasOwnProperty(relationshipName)) {\n      let data = resource.relationships[relationshipName].data;\n      if (data) {\n        let dependencyIds: Array<ResourceIdentifier> =\n          data instanceof Array ? data : [data];\n        for (let dependencyId of dependencyIds) {\n          let dependencyKey = toKey(dependencyId);\n          if (!usedResources[dependencyKey]) {\n            // change found, an other iteration will be necssary to detect\n            // transitive dependencies\n            hasChanges = true;\n            usedResources[dependencyKey] = true;\n          }\n        }\n      }\n    }\n  }\n  return hasChanges;\n};\n\nconst collectReferences = (state: NgrxJsonApiStore, usedResources: any) => {\n  while (true) {\n    let hasChanges = false;\n    for (let type in state.data) {\n      if (state.data.hasOwnProperty(type)) {\n        let resources = state.data[type];\n        for (let id in resources) {\n          if (resources.hasOwnProperty(id)) {\n            let resource = resources[id];\n            if (usedResources[toKey(resource)]) {\n              // in use, do not collect its relations\n              hasChanges =\n                hasChanges ||\n                collectReferencesForResource(state, usedResources, resource);\n            }\n          }\n        }\n      }\n    }\n    if (!hasChanges) {\n      break;\n    }\n  }\n};\n\nconst sweepUnusedResources = (state: NgrxJsonApiStore, usedResources: any) => {\n  let hasDeletions = false;\n  let newState = _.cloneDeep(state);\n  for (let type in newState.data) {\n    if (newState.data.hasOwnProperty(type)) {\n      let resources = newState.data[type];\n      for (let id in resources) {\n        if (resources.hasOwnProperty(id)) {\n          let resource = resources[id];\n          if (!usedResources[toKey(resource)]) {\n            hasDeletions = true;\n            delete resources[id];\n          }\n        }\n      }\n\n      if (_.isEmpty(resources)) {\n        delete newState.data[type];\n      }\n    }\n  }\n  return hasDeletions ? newState : state;\n};\n\nexport const compactStore = (state: NgrxJsonApiStore) => {\n  let usedResources = {};\n\n  // query results can not be collected\n  collectQueryResults(state, usedResources);\n\n  // pending changes cannot be collected\n  collectPendingChanges(state, usedResources);\n\n  // references from non-collected objects cannot be collected as well\n  collectReferences(state, usedResources);\n\n  // remove everything that is not collected\n  return sweepUnusedResources(state, usedResources);\n};\n\ninterface TopologySortContext {\n  pendingResources: Array<StoreResource>;\n  cursor: number;\n  sorted: Array<StoreResource>;\n  visited: Array<boolean>;\n  dependencies: { [id: string]: Array<StoreResource> };\n}\n\nexport const sortPendingChanges = (\n  pendingResources: Array<StoreResource>\n): Array<StoreResource> => {\n  // allocate dependency\n  let dependencies: any = {};\n  let pendingMap: any = {};\n  for (let pendingResource of pendingResources) {\n    let resource = pendingResource;\n    let key = toKey(resource);\n    dependencies[key] = [];\n    pendingMap[key] = pendingResource;\n  }\n\n  // extract dependencies\n  for (let pendingResource of pendingResources) {\n    let resource = pendingResource;\n    if (resource.relationships) {\n      let key = toKey(resource);\n      Object.keys(resource.relationships).forEach(relationshipName => {\n        let data = resource.relationships[relationshipName].data;\n        if (data) {\n          let dependencyIds: Array<ResourceIdentifier> =\n            data instanceof Array ? data : [data];\n          for (let dependencyId of dependencyIds) {\n            let dependencyKey = toKey(dependencyId);\n            if (\n              pendingMap[dependencyKey] &&\n              pendingMap[dependencyKey].state === 'CREATED'\n            ) {\n              // we have a dependency between two unsaved objects\n              dependencies[key].push(pendingMap[dependencyKey]);\n            }\n          }\n        }\n      });\n    }\n  }\n\n  // order\n  let context = {\n    pendingResources: pendingResources,\n    cursor: pendingResources.length,\n    sorted: new Array(pendingResources.length),\n    dependencies: dependencies,\n    visited: <any[]>[],\n  };\n\n  let i = context.cursor;\n  while (i--) {\n    if (!context.visited[i]) {\n      visitPending(pendingResources[i], i, [], context);\n    }\n  }\n\n  return context.sorted.reverse();\n};\n\nconst visitPending = (\n  pendingResource: StoreResource,\n  i: any,\n  predecessors: any,\n  context: TopologySortContext\n) => {\n  let key = toKey(pendingResource);\n  if (predecessors.indexOf(key) >= 0) {\n    throw new Error(\n      'Cyclic dependency: ' + key + ' with ' + JSON.stringify(predecessors)\n    );\n  }\n\n  if (context.visited[i]) {\n    return;\n  }\n  context.visited[i] = true;\n\n  // outgoing edges\n  let outgoing: Array<StoreResource> = context.dependencies[key];\n\n  let preds = predecessors.concat(key);\n  for (let child of outgoing) {\n    visitPending(\n      child,\n      context.pendingResources.indexOf(child),\n      preds,\n      context\n    );\n  }\n\n  context.sorted[--context.cursor] = pendingResource;\n};\n\nfunction collectPendingChange(\n  state: NgrxJsonApiStoreData,\n  pending: Array<StoreResource>,\n  id: ResourceIdentifier,\n  include: Array<Array<string>>,\n  includeNew: boolean\n) {\n  let storeResource = state[id.type][id.id];\n  if (\n    storeResource.state !== 'IN_SYNC' &&\n    (storeResource.state !== 'NEW' || includeNew)\n  ) {\n    pending.push(storeResource);\n  }\n\n  for (let includeElement of include) {\n    if (includeElement.length > 0) {\n      let relationshipName = includeElement[0];\n      if (\n        storeResource.relationships &&\n        storeResource.relationships[relationshipName]\n      ) {\n        let data = storeResource.relationships[relationshipName].data;\n        if (data) {\n          let relationInclude: Array<Array<string>> = [];\n          include\n            .filter(\n              relIncludeElem =>\n                relIncludeElem.length >= 2 &&\n                relIncludeElem[0] == relationshipName\n            )\n            .forEach(relIncludeElem =>\n              relationInclude.push(relIncludeElem.slice(1))\n            );\n\n          if (_.isArray(data)) {\n            let relationIds = data as Array<ResourceIdentifier>;\n            relationIds.forEach(relationId =>\n              collectPendingChange(\n                state,\n                pending,\n                relationId,\n                relationInclude,\n                includeNew\n              )\n            );\n          } else {\n            let relationId = data as ResourceIdentifier;\n            collectPendingChange(\n              state,\n              pending,\n              relationId,\n              relationInclude,\n              includeNew\n            );\n          }\n        }\n      }\n    }\n  }\n}\n\nexport function getPendingChanges(\n  state: NgrxJsonApiStoreData,\n  ids: Array<ResourceIdentifier>,\n  include: Array<string>,\n  includeNew?: boolean\n): Array<StoreResource> {\n  let pending: Array<StoreResource> = [];\n\n  if (_.isUndefined(ids)) {\n    // check all\n    Object.keys(state).forEach(type => {\n      Object.keys(state[type]).forEach(id => {\n        let storeResource = state[type][id];\n        if (\n          storeResource.state !== 'IN_SYNC' &&\n          (storeResource.state !== 'NEW' || includeNew)\n        ) {\n          pending.push(storeResource);\n        }\n      });\n    });\n  } else {\n    let relationshipInclusions = [];\n    if (include) {\n      for (let includeElement of include) {\n        relationshipInclusions.push(includeElement.split('.'));\n      }\n    }\n    for (let id of ids) {\n      collectPendingChange(\n        state,\n        pending,\n        id,\n        relationshipInclusions,\n        includeNew\n      );\n    }\n    pending = _.uniqBy(pending, function(e) {\n      return e.type + '####' + e.id;\n    });\n  }\n\n  return pending;\n}\n","export const NGRX_JSON_API_DEFAULT_ZONE = 'default';\n\nexport enum Direction {\n  ASC,\n  DESC,\n}\n\nexport interface Document {\n  data?: any;\n  included?: any;\n  meta?: any;\n  links?: any;\n  errors?: Array<ResourceError>;\n}\n\nexport interface FilteringParam {\n  path?: string;\n  operator?: string;\n  value?: any;\n}\n\nexport interface FilteringOperator {\n  name: string;\n  apiName?: string;\n  comparison: (value: any, resourceFieldValue: any) => boolean;\n}\n\nexport interface ManyResourceRelationship {\n  data?: Array<ResourceIdentifier>;\n  reference?: Array<StoreResource>;\n}\n\n/**\n * Used by code generators to navigate relationships in a type-safe manner.\n * See crnk.io for a first such generator.\n */\nexport interface TypedManyResourceRelationship<T extends StoreResource>\n  extends ManyResourceRelationship {\n  reference?: Array<T>;\n}\n\n/**\n * Used by code generators to navigate relationships in a type-safe manner.\n * See crnk.io for a first such generator.\n */\nexport interface TypedOneResourceRelationship<T extends StoreResource>\n  extends OneResourceRelationship {\n  reference?: T;\n}\n\nexport interface NgrxJsonApiConfig {\n  apiUrl: string;\n  initialState?: any;\n  resourceDefinitions?: Array<ResourceDefinition>;\n  urlBuilder?: NgrxJsonApiUrlBuilder;\n  filteringConfig?: NgrxJsonApiFilteringConfig;\n\n  /**\n   * Custom request headers.\n   */\n  requestHeaders?: { [name: string]: any };\n\n  /**\n   * Allows to disable the apply action and replace it with a custom one. For example\n   * have a look at www.crnk.io that makes use of JSON PATCH to perform bulk updates.\n   */\n  applyEnabled?: boolean;\n  /**\n   * Allows to send/receive cookies, authorization headers with cross-site request.\n   * https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials\n   *\n   * default is false\n   */\n  requestWithCredentials?: boolean;\n}\n\nexport interface NgrxJsonApiState {\n  zones: NgrxJsonApiZones;\n}\n\nexport interface NgrxJsonApiZones {\n  [id: string]: NgrxJsonApiZone;\n}\n\n/**\n * deprecated, mae use of NgrxJsonApiZone instead\n */\nexport interface NgrxJsonApiStore {\n  data: NgrxJsonApiStoreData;\n  queries: NgrxJsonApiStoreQueries;\n  isCreating: number;\n  isReading: number;\n  isUpdating: number;\n  isDeleting: number;\n  isApplying: number;\n}\n\nexport interface NgrxJsonApiZone extends NgrxJsonApiStore {}\n\nexport interface NgrxJsonApiStoreData {\n  [id: string]: NgrxJsonApiStoreResources;\n}\n\nexport interface NgrxJsonApiStoreQueries {\n  [id: string]: StoreQuery;\n}\n\nexport interface NgrxJsonApiStoreResources {\n  [id: string]: StoreResource;\n}\n\nexport interface NgrxJsonApiFilteringConfig {\n  pathSeparator?: string;\n  filteringOperators?: Array<FilteringOperator>;\n}\n\nexport interface NgrxJsonApiUrlBuilder {\n  generateFilteringQueryParams?: (params: Array<FilteringParam>) => string;\n  generateFieldsQueryParams?: (params: Array<string>) => string;\n  generateIncludedQueryParams?: (params: Array<string>) => string;\n  generateSortingQueryParams?: (params: Array<SortingParam>) => string;\n  generateQueryParams?: (...params: Array<string>) => string;\n}\n\nexport type OperationType = 'GET' | 'DELETE' | 'PATCH' | 'POST' | false;\n\nexport interface OneResourceRelationship {\n  data?: ResourceIdentifier;\n  reference?: StoreResource;\n}\n\nexport type ErrorModificationType = 'ADD' | 'REMOVE' | 'SET';\n\nexport interface ModifyStoreResourceErrorsPayload {\n  resourceId: ResourceIdentifier;\n  errors: Array<ResourceError>;\n  modificationType: ErrorModificationType;\n}\n\nexport interface Payload {\n  jsonApiData?: Document;\n  query?: Query;\n}\n\n/**\n * Specifies a GET query with parameters.\n */\nexport interface Query {\n\n  /**\n   * Uniquely identifies the query in the store\n   */\n  queryId?: string;\n\n  /**\n   * resource type to query.\n   */\n  type?: string;\n\n  /**\n   * resource id to query.\n   */\n  id?: string;\n\n  /**\n   * sorting, filtering, etc. parameters.\n   */\n  params?: QueryParams;\n}\n\nexport interface QueryParams {\n  filtering?: Array<FilteringParam>;\n  sorting?: Array<SortingParam>;\n  include?: Array<string>;\n  fields?: Array<string>;\n  offset?: number;\n  limit?: number;\n  page?: QueryPageParams;\n}\n\nexport interface QueryPageParams {\n  [id: string]: string | number;\n  offset?: number;\n  limit?: number;\n  number?: number;\n  size?: number;\n}\n\n/**\n * Represents a resource obtained from the server.\n */\nexport interface Resource extends ResourceIdentifier {\n  attributes?: { [key: string]: any };\n  relationships?: { [key: string]: ResourceRelationship };\n  meta?: any;\n  isMetaOnly?: boolean;\n  links?: any;\n}\n\nexport interface ResourceAttributeDefinition {\n  apiName?: string;\n}\n\nexport interface ResourceDefinition {\n  type: string;\n  collectionPath: string;\n  attributes?: { [key: string]: ResourceAttributeDefinition };\n  relationships?: { [key: string]: ResourceRelationDefinition };\n}\n\nexport interface ResourceError {\n  id?: string;\n  links?: any;\n  status?: string;\n  code?: string;\n  title?: string;\n  detail?: string;\n  source?: ResourceErrorSource;\n  meta?: any;\n}\n\nexport interface ResourceErrorSource {\n  pointer?: string;\n  parameter?: string;\n}\n\nexport interface ResourceIdentifier {\n  type: string;\n  id: string;\n}\n\nexport interface ResourceRelationship {\n  data?: any;\n  links?: any;\n  reference?: any;\n}\n\nexport interface ResourceRelationDefinition {\n  type: string;\n  relationType: ResourceRelationType;\n}\n\nexport type ResourceRelationType = 'hasOne' | 'hasMany';\n\nexport type ResourceState =\n  | 'NEW'\n  | 'IN_SYNC'\n  | 'CREATED'\n  | 'UPDATED'\n  | 'DELETED'\n  | 'NOT_LOADED';\n\nexport interface SortingParam {\n  api: string;\n  direction: Direction;\n}\n\nexport interface QueryResult extends StoreQuery {\n\n  /**\n   * Holds the resources from the query results. The field is dynamically populated by denormalizing\n   * StoreQuery.queryResults with the corresponding resources from the store.\n   */\n  data?: StoreResource | Array<StoreResource>;\n}\n\nexport interface ManyQueryResult extends QueryResult {\n  data?: Array<StoreResource>;\n}\n\nexport interface OneQueryResult extends QueryResult {\n  data?: StoreResource;\n}\n\nexport interface StoreQuery {\n  /**\n   * query parameter\n   */\n  query: Query;\n\n  /**\n   * Whether data is fetched from the server.\n   */\n  loading: boolean;\n\n  /**\n   * Ordered list of result identifiers that can be used to fetch the actual resources from the store.\n   */\n  resultIds?: Array<ResourceIdentifier>;\n\n  /**\n   * Meta information obtained along with the results\n   */\n  meta?: any;\n\n  /**\n   * Links information obtained along with the results.\n   */\n  links?: any;\n\n  /**\n   * Errors received from the server after attempting to perform a GET request. Errors related to POST, PATCH and\n   * DELETE are added to StoreResource.\n   */\n  errors: Array<ResourceError>;\n}\n\n/**\n * Container to hold a Resource in the store with state information.\n */\nexport interface StoreResource extends Resource {\n  /**\n   * State of the resource to track local changes not yet\n   * published to the json api endpoint.\n   */\n  state?: ResourceState;\n  /**\n   * The original resource obtained from the server.\n   */\n  persistedResource?: Resource;\n  /**\n   * One of the operation types: reading, creating, updating or deleting.\n   */\n  loading?: OperationType;\n  /**\n   * Errors received from the server after attempting to store the resource.\n   */\n  errors?: Array<ResourceError>;\n\n  /**\n   * new resources may only obtain an id when posted to the server. Till that point\n   * a StoreResource can assign make use of a temporary id and signal this by setting\n   * this flag to true. The id will not be transmitted to the server and the resource\n   * is removed from its temporary location (given by its id) as soon as it is posted\n   * to the server.\n   */\n  hasTemporaryId?: boolean;\n}\n"],"names":["StoreModule","EffectsModule","NgModule","Store","HttpClient","store","http","InjectionToken","__assign","Observable","Effect","Actions","Injectable","of","catchError","map","combineLatest","ofType","filter","flatMap","toArray","withLatestFrom","_.isEmpty","_.isEqual","_.findIndex","mergeMap","takeUntil","_.keys","_.hasIn","_.find","HttpHeaders","Pipe","_.get","_.isArray","_.isUndefined","__extends","select","_.uniqBy","_.cloneDeep","_.endsWith","_.startsWith","_.includes","_.isString","_.filter","_.omit","_.mergeWith","_.clone","_.setWith"],"mappings":"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"}